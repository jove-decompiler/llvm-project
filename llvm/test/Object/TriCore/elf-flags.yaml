# RUN: yaml2obj %s > %t
# RUN: llvm-readobj --file-headers %t | FileCheck -check-prefix=OBJ %s
# RUN: obj2yaml %t | FileCheck -check-prefix=YAML %s

# OBJ: Flags [ (0x63F80000)
# OBJ-NEXT:   EF_TRICORE_PCP (0x1000000)
# OBJ-NEXT:   EF_TRICORE_PCP2 (0x2000000)
# OBJ-NEXT:   EF_TRICORE_V1_2 (0x40000000)
# OBJ-NEXT:   EF_TRICORE_V1_3 (0x20000000)
# OBJ-NEXT:   EF_TRICORE_V1_3_1 (0x800000)
# OBJ-NEXT:   EF_TRICORE_V1_6 (0x400000)
# OBJ-NEXT:   EF_TRICORE_V1_6_1 (0x200000)
# OBJ-NEXT:   EF_TRICORE_V1_6_2 (0x100000)
# OBJ-NEXT:   EF_TRICORE_V1_8 (0x80000)
# OBJ-NEXT: ]

# YAML:      FileHeader:
# YAML-NEXT:   Class:           ELFCLASS32
# YAML-NEXT:   Data:            ELFDATA2LSB
# YAML-NEXT:   Type:            ET_EXEC
# YAML-NEXT:   Machine:         EM_TRICORE
# YAML-NEXT:   Flags:           [ EF_TRICORE_V1_2, EF_TRICORE_V1_3, EF_TRICORE_V1_3_1, EF_TRICORE_V1_6,
# YAML-SAME:                      EF_TRICORE_V1_6_1, EF_TRICORE_V1_6_2, EF_TRICORE_V1_8, EF_TRICORE_PCP, EF_TRICORE_PCP2 ]

--- !ELF
FileHeader:
  Class:           ELFCLASS32
  Data:            ELFDATA2LSB
  Type:            ET_EXEC
  Machine:         EM_TRICORE
  Flags:           [ EF_TRICORE_V1_2, EF_TRICORE_V1_3, EF_TRICORE_V1_3_1, EF_TRICORE_V1_6,
                     EF_TRICORE_V1_6_1, EF_TRICORE_V1_6_2, EF_TRICORE_V1_8, EF_TRICORE_PCP, EF_TRICORE_PCP2 ]
