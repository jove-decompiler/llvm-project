# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -O0 -mtriple=tricore -global-isel -run-pass=instruction-select \
# RUN:   -verify-machineinstrs %s -o - | FileCheck -check-prefixes=TC18OPS %s
# RUN: llc -O0 -mtriple=tricore -mattr=-tc18 -global-isel -run-pass=instruction-select \
# RUN:   -verify-machineinstrs %s -o - | FileCheck -check-prefixes=NOTC18OPS %s

---
name:            fabs_s32
legalized:       true
regBankSelected: true

registers:
  - { id: 0, class: dataregbank }
  - { id: 1, class: dataregbank }

body:             |
  bb.0:
    liveins: $d4

    ; TC18OPS-LABEL: name: fabs_s32
    ; TC18OPS: [[COPY:%[0-9]+]]:dataregs = COPY $d4
    ; TC18OPS: [[ABSF_dd:%[0-9]+]]:dataregs = ABSF_dd [[COPY]]
    ; TC18OPS: $d4 = COPY [[ABSF_dd]]
    ; NOTC18OPS-LABEL: name: fabs_s32
    ; NOTC18OPS: [[COPY:%[0-9]+]]:dataregs = COPY $d4
    ; NOTC18OPS: [[INSERT_ddccc:%[0-9]+]]:dataregs = INSERT_ddccc [[COPY]], 0, 31, 1
    ; NOTC18OPS: $d4 = COPY [[INSERT_ddccc]]
    %0(s32) = COPY $d4
    %1(s32) = G_FABS %0
    $d4 = COPY %1(s32)
...

---
name:            fabs_s64
legalized:       true
regBankSelected: true

registers:
  - { id: 0, class: dataregbank }
  - { id: 1, class: dataregbank }

body:             |
  bb.0:
    liveins: $e4

    ; TC18OPS-LABEL: name: fabs_s64
    ; TC18OPS: [[COPY:%[0-9]+]]:extdataregs = COPY $e4
    ; TC18OPS: [[ABSDF_ee:%[0-9]+]]:extdataregs = ABSDF_ee [[COPY]]
    ; TC18OPS: $e4 = COPY [[ABSDF_ee]]
    ; NOTC18OPS-LABEL: name: fabs_s64
    ; NOTC18OPS: [[COPY:%[0-9]+]]:extdataregs = COPY $e4
    ; NOTC18OPS: [[COPY1:%[0-9]+]]:dataregs = COPY [[COPY]].dsub1
    ; NOTC18OPS: [[INSERT_ddccc:%[0-9]+]]:dataregs = INSERT_ddccc [[COPY1]], 0, 31, 1
    ; NOTC18OPS: [[INSERT_SUBREG:%[0-9]+]]:extdataregs = INSERT_SUBREG [[COPY]], [[INSERT_ddccc]], %subreg.dsub1
    ; NOTC18OPS: $e4 = COPY [[INSERT_SUBREG]]
    %0(s64) = COPY $e4
    %1(s64) = G_FABS %0
    $e4 = COPY %1(s64)
...
