# RUN: llc -O0 -mtriple=tricore -global-isel -run-pass=legalizer -verify-machineinstrs %s -o - | FileCheck %s

---
name:            test_load
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: test_load
    ; CHECK: [[PTR:%[0-9]+]]:_(p0) = COPY $a4
    ; CHECK: [[LOAD_s1:%[0-9]+]]:_(s32) = G_LOAD [[PTR]](p0) :: (load 1)
    ; CHECK: [[COPY_s1:%[0-9]+]]:_(s32) = COPY [[LOAD_s1]](s32)
    ; CHECK: $d2 = COPY [[COPY_s1]](s32)
    ; CHECK: [[LOAD_s8:%[0-9]+]]:_(s32) = G_LOAD [[PTR]](p0) :: (load 1)
    ; CHECK: [[CONST:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; CHECK: [[COPY_s8:%[0-9]+]]:_(s32) = COPY [[LOAD_s8]](s32)
    ; CHECK: [[AND:%[0-9]+]]:_(s32) = G_AND [[COPY_s8]], [[CONST]]
    ; CHECK: $d2 = COPY [[AND]](s32)
    ; CHECK: [[LOAD_s16:%[0-9]+]]:_(s32) = G_LOAD [[PTR]](p0) :: (load 2)
    ; CHECK: [[TRUNC_s16:%[0-9]+]]:_(s16) = G_TRUNC [[LOAD_s16]](s32)
    ; CHECK: [[SEXT_s16:%[0-9]+]]:_(s32) = G_SEXT [[TRUNC_s16]](s16)
    ; CHECK: $d2 = COPY [[SEXT_s16]](s32)
    ; CHECK: [[LOAD_s32:%[0-9]+]]:_(s32) = G_LOAD [[PTR]](p0) :: (load 4)
    ; CHECK: $d2 = COPY [[LOAD_s32]](s32)
    ; CHECK: [[LOAD_s64:%[0-9]+]]:_(s64) = G_LOAD [[PTR]](p0) :: (load 8)
    ; CHECK: $e2 = COPY [[LOAD_s64]](s64)
    ; CHECK: [[LOWERED_LOAD_s64:%[0-9]+]]:_(s32) = G_LOAD [[PTR]](p0) :: (load 4)
    ; CHECK: [[ANYEXT_s64:%[0-9]+]]:_(s64) = G_ANYEXT [[LOWERED_LOAD_s64]](s32)
    ; CHECK: $e2 = COPY [[ANYEXT_s64]](s64)
    ; CHECK: [[LOAD_p0:%[0-9]+]]:_(p0) = G_LOAD [[PTR]](p0) :: (load 4)
    ; CHECK: $a2 = COPY [[LOAD_p0]](p0)
    %0:_(p0) = COPY $a4
    %1:_(s1) = G_LOAD %0(p0) :: (load 1)
    %2:_(s32) = G_ANYEXT %1(s1)
    $d2 = COPY %2(s32)
    %3:_(s8) = G_LOAD %0(p0) :: (load 1)
    %4:_(s32) = G_ZEXT %3(s8)
    $d2 = COPY %4(s32)
    %5:_(s16) = G_LOAD %0(p0) :: (load 2)
    %6:_(s32) = G_SEXT %5(s16)
    $d2 = COPY %6(s32)
    %7:_(s32) = G_LOAD %0(p0) :: (load 4)
    $d2 = COPY %7(s32)
    %8:_(s64) = G_LOAD %0(p0) :: (load 8)
    $e2 = COPY %8(s64)
    %9:_(s64) = G_LOAD %0(p0) :: (load 4)
    $e2 = COPY %9(s64)
    %10:_(p0) = G_LOAD %0(p0) :: (load 4)
    $a2 = COPY %10(p0)
...

---
name:            test_store
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: test_store
    ; CHECK: [[PTR:%[0-9]+]]:_(p0) = COPY $a4
    ; CHECK: [[VAL:%[0-9]+]]:_(s64) = COPY $e4
    ; CHECK: [[CONST:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; CHECK: [[TRUNC_s1:%[0-9]+]]:_(s32) = G_TRUNC [[VAL]](s64)
    ; CHECK: [[COPY_CONST:%[0-9]+]]:_(s32) = COPY [[CONST]](s32)
    ; CHECK: [[AND:%[0-9]+]]:_(s32) = G_AND [[TRUNC_s1]], [[COPY_CONST]]
    ; CHECK: [[TRUNC_AND:%[0-9]+]]:_(s8) = G_TRUNC [[AND]](s32)
    ; CHECK: G_STORE [[TRUNC_AND]](s8), [[PTR]](p0) :: (store 1)
    ; CHECK: [[TRUNC_s8:%[0-9]+]]:_(s8) = G_TRUNC [[VAL]](s64)
    ; CHECK: G_STORE [[TRUNC_s8]](s8), [[PTR]](p0) :: (store 1)
    ; CHECK: [[TRUNC_s16:%[0-9]+]]:_(s16) = G_TRUNC [[VAL]](s64)
    ; CHECK: G_STORE [[TRUNC_s16]](s16), [[PTR]](p0) :: (store 2)
    ; CHECK: [[TRUNC_s32:%[0-9]+]]:_(s32) = G_TRUNC [[VAL]](s64)
    ; CHECK: G_STORE [[TRUNC_s32]](s32), [[PTR]](p0) :: (store 4)
    ; CHECK: G_STORE [[VAL]](s64), [[PTR]](p0) :: (store 8)
    ; CHECK: G_STORE [[PTR]](p0), [[PTR]](p0) :: (store 4)
    %0:_(p0) = COPY $a4
    %1:_(s64) = COPY $e4
    %2:_(s1) = G_TRUNC %1(s64)
    G_STORE %2(s1), %0(p0) :: (store 1)
    %3:_(s8) = G_TRUNC %1(s64)
    G_STORE %3(s8), %0(p0) :: (store 1)
    %4:_(s16) = G_TRUNC %1(s64)
    G_STORE %4(s16), %0(p0) :: (store 2)
    %5:_(s32) = G_TRUNC %1(s64)
    G_STORE %5(s32), %0(p0) :: (store 4)
    G_STORE %1(s64), %0(p0) :: (store 8)
    G_STORE %0(p0), %0(p0) :: (store 4)
...
