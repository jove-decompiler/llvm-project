# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -O0 -mtriple=tricore -global-isel -run-pass=instruction-select -verify-machineinstrs %s -o - | FileCheck %s

---
name: fcmp_false_s32
legalized: true
regBankSelected: true

body: |
  bb.0:
    liveins: $d4, $d5
    ; CHECK-LABEL: name: fcmp_false_s32
    ; CHECK: [[MOVU_dc:%[0-9]+]]:dataregs = MOVU_dc 0
    ; CHECK: $d2 = COPY [[MOVU_dc]]
    %0:dataregbank(s32) = COPY $d4
    %1:dataregbank(s32) = COPY $d5
    %2:dataregbank(s32) = G_FCMP floatpred(false), %0, %1
    $d2 = COPY %2(s32)
...

---
name: fcmp_oeq_s32
legalized: true
regBankSelected: true

body: |
  bb.0:
    liveins: $d4, $d5
    ; CHECK-LABEL: name: fcmp_oeq_s32
    ; CHECK: [[COPY:%[0-9]+]]:dataregs = COPY $d4
    ; CHECK: [[COPY1:%[0-9]+]]:dataregs = COPY $d5
    ; CHECK: [[CMPF_ddd:%[0-9]+]]:dataregs = CMPF_ddd [[COPY]], [[COPY1]], implicit-def $psw
    ; CHECK: [[EXTRU_ddcc:%[0-9]+]]:dataregs = EXTRU_ddcc [[CMPF_ddd]], 1, 1
    ; CHECK: $d2 = COPY [[EXTRU_ddcc]]
    %0:dataregbank(s32) = COPY $d4
    %1:dataregbank(s32) = COPY $d5
    %2:dataregbank(s32) = G_FCMP floatpred(oeq), %0, %1
    $d2 = COPY %2(s32)
...

---
name: fcmp_ogt_s32
legalized: true
regBankSelected: true

body: |
  bb.0:
    liveins: $d4, $d5
    ; CHECK-LABEL: name: fcmp_ogt_s32
    ; CHECK: [[COPY:%[0-9]+]]:dataregs = COPY $d4
    ; CHECK: [[COPY1:%[0-9]+]]:dataregs = COPY $d5
    ; CHECK: [[CMPF_ddd:%[0-9]+]]:dataregs = CMPF_ddd [[COPY]], [[COPY1]], implicit-def $psw
    ; CHECK: [[EXTRU_ddcc:%[0-9]+]]:dataregs = EXTRU_ddcc [[CMPF_ddd]], 2, 1
    ; CHECK: $d2 = COPY [[EXTRU_ddcc]]
    %0:dataregbank(s32) = COPY $d4
    %1:dataregbank(s32) = COPY $d5
    %2:dataregbank(s32) = G_FCMP floatpred(ogt), %0, %1
    $d2 = COPY %2(s32)
...

---
name: fcmp_oge_s32
legalized: true
regBankSelected: true

body: |
  bb.0:
    liveins: $d4, $d5
    ; CHECK-LABEL: name: fcmp_oge_s32
    ; CHECK: [[COPY:%[0-9]+]]:dataregs = COPY $d4
    ; CHECK: [[COPY1:%[0-9]+]]:dataregs = COPY $d5
    ; CHECK: [[CMPF_ddd:%[0-9]+]]:dataregs = CMPF_ddd [[COPY]], [[COPY1]], implicit-def $psw
    ; CHECK: [[ORT_ddcdc:%[0-9]+]]:dataregs = ORT_ddcdc [[CMPF_ddd]], 2, [[CMPF_ddd]], 1
    ; CHECK: $d2 = COPY [[ORT_ddcdc]]
    %0:dataregbank(s32) = COPY $d4
    %1:dataregbank(s32) = COPY $d5
    %2:dataregbank(s32) = G_FCMP floatpred(oge), %0, %1
    $d2 = COPY %2(s32)
...

---
name: fcmp_olt_s32
legalized: true
regBankSelected: true

body: |
  bb.0:
    liveins: $d4, $d5
    ; CHECK-LABEL: name: fcmp_olt_s32
    ; CHECK: [[COPY:%[0-9]+]]:dataregs = COPY $d4
    ; CHECK: [[COPY1:%[0-9]+]]:dataregs = COPY $d5
    ; CHECK: [[CMPF_ddd:%[0-9]+]]:dataregs = CMPF_ddd [[COPY]], [[COPY1]], implicit-def $psw
    ; CHECK: [[EXTRU_ddcc:%[0-9]+]]:dataregs = EXTRU_ddcc [[CMPF_ddd]], 0, 1
    ; CHECK: $d2 = COPY [[EXTRU_ddcc]]
    %0:dataregbank(s32) = COPY $d4
    %1:dataregbank(s32) = COPY $d5
    %2:dataregbank(s32) = G_FCMP floatpred(olt), %0, %1
    $d2 = COPY %2(s32)
...

---
name: fcmp_ole_s32
legalized: true
regBankSelected: true

body: |
  bb.0:
    liveins: $d4, $d5
    ; CHECK-LABEL: name: fcmp_ole_s32
    ; CHECK: [[COPY:%[0-9]+]]:dataregs = COPY $d4
    ; CHECK: [[COPY1:%[0-9]+]]:dataregs = COPY $d5
    ; CHECK: [[CMPF_ddd:%[0-9]+]]:dataregs = CMPF_ddd [[COPY]], [[COPY1]], implicit-def $psw
    ; CHECK: [[ORT_ddcdc:%[0-9]+]]:dataregs = ORT_ddcdc [[CMPF_ddd]], 1, [[CMPF_ddd]], 0
    ; CHECK: $d2 = COPY [[ORT_ddcdc]]
    %0:dataregbank(s32) = COPY $d4
    %1:dataregbank(s32) = COPY $d5
    %2:dataregbank(s32) = G_FCMP floatpred(ole), %0, %1
    $d2 = COPY %2(s32)
...

---
name: fcmp_one_s32
legalized: true
regBankSelected: true

body: |
  bb.0:
    liveins: $d4, $d5
    ; CHECK-LABEL: name: fcmp_one_s32
    ; CHECK: [[COPY:%[0-9]+]]:dataregs = COPY $d4
    ; CHECK: [[COPY1:%[0-9]+]]:dataregs = COPY $d5
    ; CHECK: [[CMPF_ddd:%[0-9]+]]:dataregs = CMPF_ddd [[COPY]], [[COPY1]], implicit-def $psw
    ; CHECK: [[ORT_ddcdc:%[0-9]+]]:dataregs = ORT_ddcdc [[CMPF_ddd]], 2, [[CMPF_ddd]], 0
    ; CHECK: $d2 = COPY [[ORT_ddcdc]]
    %0:dataregbank(s32) = COPY $d4
    %1:dataregbank(s32) = COPY $d5
    %2:dataregbank(s32) = G_FCMP floatpred(one), %0, %1
    $d2 = COPY %2(s32)
...

---
name: fcmp_ord_s32
legalized: true
regBankSelected: true

body: |
  bb.0:
    liveins: $d4, $d5
    ; CHECK-LABEL: name: fcmp_ord_s32
    ; CHECK: [[COPY:%[0-9]+]]:dataregs = COPY $d4
    ; CHECK: [[COPY1:%[0-9]+]]:dataregs = COPY $d5
    ; CHECK: [[CMPF_ddd:%[0-9]+]]:dataregs = CMPF_ddd [[COPY]], [[COPY1]], implicit-def $psw
    ; CHECK: [[NORT_ddcdc:%[0-9]+]]:dataregs = NORT_ddcdc [[CMPF_ddd]], 3, [[CMPF_ddd]], 3
    ; CHECK: $d2 = COPY [[NORT_ddcdc]]
    %0:dataregbank(s32) = COPY $d4
    %1:dataregbank(s32) = COPY $d5
    %2:dataregbank(s32) = G_FCMP floatpred(ord), %0, %1
    $d2 = COPY %2(s32)
...

---
name: fcmp_uno_s32
legalized: true
regBankSelected: true

body: |
  bb.0:
    liveins: $d4, $d5
    ; CHECK-LABEL: name: fcmp_uno_s32
    ; CHECK: [[COPY:%[0-9]+]]:dataregs = COPY $d4
    ; CHECK: [[COPY1:%[0-9]+]]:dataregs = COPY $d5
    ; CHECK: [[CMPF_ddd:%[0-9]+]]:dataregs = CMPF_ddd [[COPY]], [[COPY1]], implicit-def $psw
    ; CHECK: [[EXTRU_ddcc:%[0-9]+]]:dataregs = EXTRU_ddcc [[CMPF_ddd]], 3, 1
    ; CHECK: $d2 = COPY [[EXTRU_ddcc]]
    %0:dataregbank(s32) = COPY $d4
    %1:dataregbank(s32) = COPY $d5
    %2:dataregbank(s32) = G_FCMP floatpred(uno), %0, %1
    $d2 = COPY %2(s32)
...

---
name: fcmp_ueq_s32
legalized: true
regBankSelected: true

body: |
  bb.0:
    liveins: $d4, $d5
    ; CHECK-LABEL: name: fcmp_ueq_s32
    ; CHECK: [[COPY:%[0-9]+]]:dataregs = COPY $d4
    ; CHECK: [[COPY1:%[0-9]+]]:dataregs = COPY $d5
    ; CHECK: [[CMPF_ddd:%[0-9]+]]:dataregs = CMPF_ddd [[COPY]], [[COPY1]], implicit-def $psw
    ; CHECK: [[ORT_ddcdc:%[0-9]+]]:dataregs = ORT_ddcdc [[CMPF_ddd]], 3, [[CMPF_ddd]], 1
    ; CHECK: $d2 = COPY [[ORT_ddcdc]]
    %0:dataregbank(s32) = COPY $d4
    %1:dataregbank(s32) = COPY $d5
    %2:dataregbank(s32) = G_FCMP floatpred(ueq), %0, %1
    $d2 = COPY %2(s32)
...

---
name: fcmp_ugt_s32
legalized: true
regBankSelected: true

body: |
  bb.0:
    liveins: $d4, $d5
    ; CHECK-LABEL: name: fcmp_ugt_s32
    ; CHECK: [[COPY:%[0-9]+]]:dataregs = COPY $d4
    ; CHECK: [[COPY1:%[0-9]+]]:dataregs = COPY $d5
    ; CHECK: [[CMPF_ddd:%[0-9]+]]:dataregs = CMPF_ddd [[COPY]], [[COPY1]], implicit-def $psw
    ; CHECK: [[ORT_ddcdc:%[0-9]+]]:dataregs = ORT_ddcdc [[CMPF_ddd]], 3, [[CMPF_ddd]], 2
    ; CHECK: $d2 = COPY [[ORT_ddcdc]]
    %0:dataregbank(s32) = COPY $d4
    %1:dataregbank(s32) = COPY $d5
    %2:dataregbank(s32) = G_FCMP floatpred(ugt), %0, %1
    $d2 = COPY %2(s32)
...

---
name: fcmp_uge_s32
legalized: true
regBankSelected: true

body: |
  bb.0:
    liveins: $d4, $d5
    ; CHECK-LABEL: name: fcmp_uge_s32
    ; CHECK: [[COPY:%[0-9]+]]:dataregs = COPY $d4
    ; CHECK: [[COPY1:%[0-9]+]]:dataregs = COPY $d5
    ; CHECK: [[CMPF_ddd:%[0-9]+]]:dataregs = CMPF_ddd [[COPY]], [[COPY1]], implicit-def $psw
    ; CHECK: [[AND_ddc:%[0-9]+]]:dataregs = AND_ddc [[CMPF_ddd]], 14
    ; CHECK: [[NE_ddc:%[0-9]+]]:dataregs = NE_ddc [[AND_ddc]], 0
    ; CHECK: $d2 = COPY [[NE_ddc]]
    %0:dataregbank(s32) = COPY $d4
    %1:dataregbank(s32) = COPY $d5
    %2:dataregbank(s32) = G_FCMP floatpred(uge), %0, %1
    $d2 = COPY %2(s32)
...

---
name: fcmp_ult_s32
legalized: true
regBankSelected: true

body: |
  bb.0:
    liveins: $d4, $d5
    ; CHECK-LABEL: name: fcmp_ult_s32
    ; CHECK: [[COPY:%[0-9]+]]:dataregs = COPY $d4
    ; CHECK: [[COPY1:%[0-9]+]]:dataregs = COPY $d5
    ; CHECK: [[CMPF_ddd:%[0-9]+]]:dataregs = CMPF_ddd [[COPY]], [[COPY1]], implicit-def $psw
    ; CHECK: [[ORT_ddcdc:%[0-9]+]]:dataregs = ORT_ddcdc [[CMPF_ddd]], 3, [[CMPF_ddd]], 0
    ; CHECK: $d2 = COPY [[ORT_ddcdc]]
    %0:dataregbank(s32) = COPY $d4
    %1:dataregbank(s32) = COPY $d5
    %2:dataregbank(s32) = G_FCMP floatpred(ult), %0, %1
    $d2 = COPY %2(s32)
...

---
name: fcmp_ule_s32
legalized: true
regBankSelected: true

body: |
  bb.0:
    liveins: $d4, $d5
    ; CHECK-LABEL: name: fcmp_ule_s32
    ; CHECK: [[COPY:%[0-9]+]]:dataregs = COPY $d4
    ; CHECK: [[COPY1:%[0-9]+]]:dataregs = COPY $d5
    ; CHECK: [[CMPF_ddd:%[0-9]+]]:dataregs = CMPF_ddd [[COPY]], [[COPY1]], implicit-def $psw
    ; CHECK: [[AND_ddc:%[0-9]+]]:dataregs = AND_ddc [[CMPF_ddd]], 11
    ; CHECK: [[NE_ddc:%[0-9]+]]:dataregs = NE_ddc [[AND_ddc]], 0
    ; CHECK: $d2 = COPY [[NE_ddc]]
    %0:dataregbank(s32) = COPY $d4
    %1:dataregbank(s32) = COPY $d5
    %2:dataregbank(s32) = G_FCMP floatpred(ule), %0, %1
    $d2 = COPY %2(s32)
...

---
name: fcmp_une_s32
legalized: true
regBankSelected: true

body: |
  bb.0:
    liveins: $d4, $d5
    ; CHECK-LABEL: name: fcmp_une_s32
    ; CHECK: [[COPY:%[0-9]+]]:dataregs = COPY $d4
    ; CHECK: [[COPY1:%[0-9]+]]:dataregs = COPY $d5
    ; CHECK: [[CMPF_ddd:%[0-9]+]]:dataregs = CMPF_ddd [[COPY]], [[COPY1]], implicit-def $psw
    ; CHECK: [[AND_ddc:%[0-9]+]]:dataregs = AND_ddc [[CMPF_ddd]], 13
    ; CHECK: [[NE_ddc:%[0-9]+]]:dataregs = NE_ddc [[AND_ddc]], 0
    ; CHECK: $d2 = COPY [[NE_ddc]]
    %0:dataregbank(s32) = COPY $d4
    %1:dataregbank(s32) = COPY $d5
    %2:dataregbank(s32) = G_FCMP floatpred(une), %0, %1
    $d2 = COPY %2(s32)
...

---
name: fcmp_true_s32
legalized: true
regBankSelected: true

body: |
  bb.0:
    liveins: $d4, $d5
    ; CHECK-LABEL: name: fcmp_true_s32
    ; CHECK: [[MOVU_dc:%[0-9]+]]:dataregs = MOVU_dc 1
    ; CHECK: $d2 = COPY [[MOVU_dc]]
    %0:dataregbank(s32) = COPY $d4
    %1:dataregbank(s32) = COPY $d5
    %2:dataregbank(s32) = G_FCMP floatpred(true), %0, %1
    $d2 = COPY %2(s32)
...

---
name: fcmp_false_s64
legalized: true
regBankSelected: true

body: |
  bb.0:
    liveins: $e4, $e6
    ; CHECK-LABEL: name: fcmp_false_s64
    ; CHECK: [[MOVU_dc:%[0-9]+]]:dataregs = MOVU_dc 0
    ; CHECK: $d2 = COPY [[MOVU_dc]]
    %0:dataregbank(s64) = COPY $e4
    %1:dataregbank(s64) = COPY $e6
    %2:dataregbank(s32) = G_FCMP floatpred(false), %0, %1
    $d2 = COPY %2(s32)
...

---
name: fcmp_oeq_s64
legalized: true
regBankSelected: true

body: |
  bb.0:
    liveins: $e4, $e6
    ; CHECK-LABEL: name: fcmp_oeq_s64
    ; CHECK: [[COPY:%[0-9]+]]:extdataregs = COPY $e4
    ; CHECK: [[COPY1:%[0-9]+]]:extdataregs = COPY $e6
    ; CHECK: [[CMPDF_dee:%[0-9]+]]:dataregs = CMPDF_dee [[COPY]], [[COPY1]], implicit-def $psw
    ; CHECK: [[EXTRU_ddcc:%[0-9]+]]:dataregs = EXTRU_ddcc [[CMPDF_dee]], 1, 1
    ; CHECK: $d2 = COPY [[EXTRU_ddcc]]
    %0:dataregbank(s64) = COPY $e4
    %1:dataregbank(s64) = COPY $e6
    %2:dataregbank(s32) = G_FCMP floatpred(oeq), %0, %1
    $d2 = COPY %2(s32)
...

---
name: fcmp_ogt_s64
legalized: true
regBankSelected: true

body: |
  bb.0:
    liveins: $e4, $e6
    ; CHECK-LABEL: name: fcmp_ogt_s64
    ; CHECK: [[COPY:%[0-9]+]]:extdataregs = COPY $e4
    ; CHECK: [[COPY1:%[0-9]+]]:extdataregs = COPY $e6
    ; CHECK: [[CMPDF_dee:%[0-9]+]]:dataregs = CMPDF_dee [[COPY]], [[COPY1]], implicit-def $psw
    ; CHECK: [[EXTRU_ddcc:%[0-9]+]]:dataregs = EXTRU_ddcc [[CMPDF_dee]], 2, 1
    ; CHECK: $d2 = COPY [[EXTRU_ddcc]]
    %0:dataregbank(s64) = COPY $e4
    %1:dataregbank(s64) = COPY $e6
    %2:dataregbank(s32) = G_FCMP floatpred(ogt), %0, %1
    $d2 = COPY %2(s32)
...

---
name: fcmp_oge_s64
legalized: true
regBankSelected: true

body: |
  bb.0:
    liveins: $e4, $e6
    ; CHECK-LABEL: name: fcmp_oge_s64
    ; CHECK: [[COPY:%[0-9]+]]:extdataregs = COPY $e4
    ; CHECK: [[COPY1:%[0-9]+]]:extdataregs = COPY $e6
    ; CHECK: [[CMPDF_dee:%[0-9]+]]:dataregs = CMPDF_dee [[COPY]], [[COPY1]], implicit-def $psw
    ; CHECK: [[ORT_ddcdc:%[0-9]+]]:dataregs = ORT_ddcdc [[CMPDF_dee]], 2, [[CMPDF_dee]], 1
    ; CHECK: $d2 = COPY [[ORT_ddcdc]]
    %0:dataregbank(s64) = COPY $e4
    %1:dataregbank(s64) = COPY $e6
    %2:dataregbank(s32) = G_FCMP floatpred(oge), %0, %1
    $d2 = COPY %2(s32)
...

---
name: fcmp_olt_s64
legalized: true
regBankSelected: true

body: |
  bb.0:
    liveins: $e4, $e6
    ; CHECK-LABEL: name: fcmp_olt_s64
    ; CHECK: [[COPY:%[0-9]+]]:extdataregs = COPY $e4
    ; CHECK: [[COPY1:%[0-9]+]]:extdataregs = COPY $e6
    ; CHECK: [[CMPDF_dee:%[0-9]+]]:dataregs = CMPDF_dee [[COPY]], [[COPY1]], implicit-def $psw
    ; CHECK: [[EXTRU_ddcc:%[0-9]+]]:dataregs = EXTRU_ddcc [[CMPDF_dee]], 0, 1
    ; CHECK: $d2 = COPY [[EXTRU_ddcc]]
    %0:dataregbank(s64) = COPY $e4
    %1:dataregbank(s64) = COPY $e6
    %2:dataregbank(s32) = G_FCMP floatpred(olt), %0, %1
    $d2 = COPY %2(s32)
...

---
name: fcmp_ole_s64
legalized: true
regBankSelected: true

body: |
  bb.0:
    liveins: $e4, $e6
    ; CHECK-LABEL: name: fcmp_ole_s64
    ; CHECK: [[COPY:%[0-9]+]]:extdataregs = COPY $e4
    ; CHECK: [[COPY1:%[0-9]+]]:extdataregs = COPY $e6
    ; CHECK: [[CMPDF_dee:%[0-9]+]]:dataregs = CMPDF_dee [[COPY]], [[COPY1]], implicit-def $psw
    ; CHECK: [[ORT_ddcdc:%[0-9]+]]:dataregs = ORT_ddcdc [[CMPDF_dee]], 1, [[CMPDF_dee]], 0
    ; CHECK: $d2 = COPY [[ORT_ddcdc]]
    %0:dataregbank(s64) = COPY $e4
    %1:dataregbank(s64) = COPY $e6
    %2:dataregbank(s32) = G_FCMP floatpred(ole), %0, %1
    $d2 = COPY %2(s32)
...

---
name: fcmp_one_s64
legalized: true
regBankSelected: true

body: |
  bb.0:
    liveins: $e4, $e6
    ; CHECK-LABEL: name: fcmp_one_s64
    ; CHECK: [[COPY:%[0-9]+]]:extdataregs = COPY $e4
    ; CHECK: [[COPY1:%[0-9]+]]:extdataregs = COPY $e6
    ; CHECK: [[CMPDF_dee:%[0-9]+]]:dataregs = CMPDF_dee [[COPY]], [[COPY1]], implicit-def $psw
    ; CHECK: [[ORT_ddcdc:%[0-9]+]]:dataregs = ORT_ddcdc [[CMPDF_dee]], 2, [[CMPDF_dee]], 0
    ; CHECK: $d2 = COPY [[ORT_ddcdc]]
    %0:dataregbank(s64) = COPY $e4
    %1:dataregbank(s64) = COPY $e6
    %2:dataregbank(s32) = G_FCMP floatpred(one), %0, %1
    $d2 = COPY %2(s32)
...

---
name: fcmp_ord_s64
legalized: true
regBankSelected: true

body: |
  bb.0:
    liveins: $e4, $e6
    ; CHECK-LABEL: name: fcmp_ord_s64
    ; CHECK: [[COPY:%[0-9]+]]:extdataregs = COPY $e4
    ; CHECK: [[COPY1:%[0-9]+]]:extdataregs = COPY $e6
    ; CHECK: [[CMPDF_dee:%[0-9]+]]:dataregs = CMPDF_dee [[COPY]], [[COPY1]], implicit-def $psw
    ; CHECK: [[NORT_ddcdc:%[0-9]+]]:dataregs = NORT_ddcdc [[CMPDF_dee]], 3, [[CMPDF_dee]], 3
    ; CHECK: $d2 = COPY [[NORT_ddcdc]]
    %0:dataregbank(s64) = COPY $e4
    %1:dataregbank(s64) = COPY $e6
    %2:dataregbank(s32) = G_FCMP floatpred(ord), %0, %1
    $d2 = COPY %2(s32)
...

---
name: fcmp_uno_s64
legalized: true
regBankSelected: true

body: |
  bb.0:
    liveins: $e4, $e6
    ; CHECK-LABEL: name: fcmp_uno_s64
    ; CHECK: [[COPY:%[0-9]+]]:extdataregs = COPY $e4
    ; CHECK: [[COPY1:%[0-9]+]]:extdataregs = COPY $e6
    ; CHECK: [[CMPDF_dee:%[0-9]+]]:dataregs = CMPDF_dee [[COPY]], [[COPY1]], implicit-def $psw
    ; CHECK: [[EXTRU_ddcc:%[0-9]+]]:dataregs = EXTRU_ddcc [[CMPDF_dee]], 3, 1
    ; CHECK: $d2 = COPY [[EXTRU_ddcc]]
    %0:dataregbank(s64) = COPY $e4
    %1:dataregbank(s64) = COPY $e6
    %2:dataregbank(s32) = G_FCMP floatpred(uno), %0, %1
    $d2 = COPY %2(s32)
...

---
name: fcmp_ueq_s64
legalized: true
regBankSelected: true

body: |
  bb.0:
    liveins: $e4, $e6
    ; CHECK-LABEL: name: fcmp_ueq_s64
    ; CHECK: [[COPY:%[0-9]+]]:extdataregs = COPY $e4
    ; CHECK: [[COPY1:%[0-9]+]]:extdataregs = COPY $e6
    ; CHECK: [[CMPDF_dee:%[0-9]+]]:dataregs = CMPDF_dee [[COPY]], [[COPY1]], implicit-def $psw
    ; CHECK: [[ORT_ddcdc:%[0-9]+]]:dataregs = ORT_ddcdc [[CMPDF_dee]], 3, [[CMPDF_dee]], 1
    ; CHECK: $d2 = COPY [[ORT_ddcdc]]
    %0:dataregbank(s64) = COPY $e4
    %1:dataregbank(s64) = COPY $e6
    %2:dataregbank(s32) = G_FCMP floatpred(ueq), %0, %1
    $d2 = COPY %2(s32)
...

---
name: fcmp_ugt_s64
legalized: true
regBankSelected: true

body: |
  bb.0:
    liveins: $e4, $e6
    ; CHECK-LABEL: name: fcmp_ugt_s64
    ; CHECK: [[COPY:%[0-9]+]]:extdataregs = COPY $e4
    ; CHECK: [[COPY1:%[0-9]+]]:extdataregs = COPY $e6
    ; CHECK: [[CMPDF_dee:%[0-9]+]]:dataregs = CMPDF_dee [[COPY]], [[COPY1]], implicit-def $psw
    ; CHECK: [[ORT_ddcdc:%[0-9]+]]:dataregs = ORT_ddcdc [[CMPDF_dee]], 3, [[CMPDF_dee]], 2
    ; CHECK: $d2 = COPY [[ORT_ddcdc]]
    %0:dataregbank(s64) = COPY $e4
    %1:dataregbank(s64) = COPY $e6
    %2:dataregbank(s32) = G_FCMP floatpred(ugt), %0, %1
    $d2 = COPY %2(s32)
...

---
name: fcmp_uge_s64
legalized: true
regBankSelected: true

body: |
  bb.0:
    liveins: $e4, $e6
    ; CHECK-LABEL: name: fcmp_uge_s64
    ; CHECK: [[COPY:%[0-9]+]]:extdataregs = COPY $e4
    ; CHECK: [[COPY1:%[0-9]+]]:extdataregs = COPY $e6
    ; CHECK: [[CMPDF_dee:%[0-9]+]]:dataregs = CMPDF_dee [[COPY]], [[COPY1]], implicit-def $psw
    ; CHECK: [[AND_ddc:%[0-9]+]]:dataregs = AND_ddc [[CMPDF_dee]], 14
    ; CHECK: [[NE_ddc:%[0-9]+]]:dataregs = NE_ddc [[AND_ddc]], 0
    ; CHECK: $d2 = COPY [[NE_ddc]]
    %0:dataregbank(s64) = COPY $e4
    %1:dataregbank(s64) = COPY $e6
    %2:dataregbank(s32) = G_FCMP floatpred(uge), %0, %1
    $d2 = COPY %2(s32)
...

---
name: fcmp_ult_s64
legalized: true
regBankSelected: true

body: |
  bb.0:
    liveins: $e4, $e6
    ; CHECK-LABEL: name: fcmp_ult_s64
    ; CHECK: [[COPY:%[0-9]+]]:extdataregs = COPY $e4
    ; CHECK: [[COPY1:%[0-9]+]]:extdataregs = COPY $e6
    ; CHECK: [[CMPDF_dee:%[0-9]+]]:dataregs = CMPDF_dee [[COPY]], [[COPY1]], implicit-def $psw
    ; CHECK: [[ORT_ddcdc:%[0-9]+]]:dataregs = ORT_ddcdc [[CMPDF_dee]], 3, [[CMPDF_dee]], 0
    ; CHECK: $d2 = COPY [[ORT_ddcdc]]
    %0:dataregbank(s64) = COPY $e4
    %1:dataregbank(s64) = COPY $e6
    %2:dataregbank(s32) = G_FCMP floatpred(ult), %0, %1
    $d2 = COPY %2(s32)
...

---
name: fcmp_ule_s64
legalized: true
regBankSelected: true

body: |
  bb.0:
    liveins: $e4, $e6
    ; CHECK-LABEL: name: fcmp_ule_s64
    ; CHECK: [[COPY:%[0-9]+]]:extdataregs = COPY $e4
    ; CHECK: [[COPY1:%[0-9]+]]:extdataregs = COPY $e6
    ; CHECK: [[CMPDF_dee:%[0-9]+]]:dataregs = CMPDF_dee [[COPY]], [[COPY1]], implicit-def $psw
    ; CHECK: [[AND_ddc:%[0-9]+]]:dataregs = AND_ddc [[CMPDF_dee]], 11
    ; CHECK: [[NE_ddc:%[0-9]+]]:dataregs = NE_ddc [[AND_ddc]], 0
    ; CHECK: $d2 = COPY [[NE_ddc]]
    %0:dataregbank(s64) = COPY $e4
    %1:dataregbank(s64) = COPY $e6
    %2:dataregbank(s32) = G_FCMP floatpred(ule), %0, %1
    $d2 = COPY %2(s32)
...

---
name: fcmp_une_s64
legalized: true
regBankSelected: true

body: |
  bb.0:
    liveins: $e4, $e6
    ; CHECK-LABEL: name: fcmp_une_s64
    ; CHECK: [[COPY:%[0-9]+]]:extdataregs = COPY $e4
    ; CHECK: [[COPY1:%[0-9]+]]:extdataregs = COPY $e6
    ; CHECK: [[CMPDF_dee:%[0-9]+]]:dataregs = CMPDF_dee [[COPY]], [[COPY1]], implicit-def $psw
    ; CHECK: [[AND_ddc:%[0-9]+]]:dataregs = AND_ddc [[CMPDF_dee]], 13
    ; CHECK: [[NE_ddc:%[0-9]+]]:dataregs = NE_ddc [[AND_ddc]], 0
    ; CHECK: $d2 = COPY [[NE_ddc]]
    %0:dataregbank(s64) = COPY $e4
    %1:dataregbank(s64) = COPY $e6
    %2:dataregbank(s32) = G_FCMP floatpred(une), %0, %1
    $d2 = COPY %2(s32)
...

---
name: fcmp_true_s64
legalized: true
regBankSelected: true

body: |
  bb.0:
    liveins: $e4, $e6
    ; CHECK-LABEL: name: fcmp_true_s64
    ; CHECK: [[MOVU_dc:%[0-9]+]]:dataregs = MOVU_dc 1
    ; CHECK: $d2 = COPY [[MOVU_dc]]
    %0:dataregbank(s64) = COPY $e4
    %1:dataregbank(s64) = COPY $e6
    %2:dataregbank(s32) = G_FCMP floatpred(true), %0, %1
    $d2 = COPY %2(s32)
...
