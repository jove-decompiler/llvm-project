# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -O0 -mtriple=tricore -global-isel -run-pass=instruction-select \
# RUN:   -verify-machineinstrs %s -o - | FileCheck %s

---
name:            insert_s32_s16
legalized:       true
regBankSelected: true

registers:
  - { id: 0, class: dataregbank }
  - { id: 1, class: dataregbank }
  - { id: 2, class: dataregbank }
  - { id: 3, class: dataregbank }

body:             |
  bb.0:
    liveins: $d4, $d5

    ; CHECK-LABEL: name: insert_s32_s16
    ; CHECK: [[COPY:%[0-9]+]]:dataregs = COPY $d4
    ; CHECK: [[COPY1:%[0-9]+]]:dataregs = COPY $d5
    ; CHECK: [[INSERT_dddcc:%[0-9]+]]:dataregs = INSERT_dddcc [[COPY]], [[COPY1]], 0, 16
    ; CHECK: $d4 = COPY [[INSERT_dddcc]]
    %0(s32) = COPY $d4
    %1(s32) = COPY $d5
    %2(s16) = G_TRUNC %1(s32)
    %3(s32) = G_INSERT %0, %2(s16), 0
    $d4 = COPY %3
...

---
name:            insert_p0_s16
legalized:       true
regBankSelected: true

registers:
  - { id: 0, class: dataregbank }
  - { id: 1, class: dataregbank }
  - { id: 2, class: dataregbank }
  - { id: 3, class: dataregbank }

body:             |
  bb.0:
    liveins: $d4, $d5


    ; CHECK-LABEL: name: insert_p0_s16
    ; CHECK: [[COPY:%[0-9]+]]:dataregs = COPY $d4
    ; CHECK: [[COPY1:%[0-9]+]]:dataregs = COPY $d5
    ; CHECK: [[INSERT_dddcc:%[0-9]+]]:dataregs = INSERT_dddcc [[COPY]], [[COPY1]], 0, 16
    ; CHECK: $d4 = COPY [[INSERT_dddcc]]
    %0(p0) = COPY $d4
    %1(s32) = COPY $d5
    %2(s16) = G_TRUNC %1(s32)
    %3(p0) = G_INSERT %0, %2(s16), 0
    $d4 = COPY %3
...
