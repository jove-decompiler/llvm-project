# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -O0 -mtriple=tricore -global-isel -run-pass=legalizer \
# RUN: -verify-machineinstrs %s -o - | FileCheck -check-prefixes=TC18OPS %s
# RUN: llc -O0 -mtriple=tricore -mattr=-tc18 -global-isel -run-pass=legalizer \
# RUN: -verify-machineinstrs %s -o - | FileCheck -check-prefixes=NOTC18OPS %s

---
name:            fmaxnum_s16
body:             |
  bb.0.entry:

    ; TC18OPS-LABEL: name: fmaxnum_s16
    ; TC18OPS: [[COPY:%[0-9]+]]:_(s32) = COPY $d4
    ; TC18OPS: [[COPY1:%[0-9]+]]:_(s32) = COPY $d5
    ; TC18OPS: [[FPTRUNC:%[0-9]+]]:_(s16) = G_FPTRUNC [[COPY]](s32)
    ; TC18OPS: [[FPTRUNC1:%[0-9]+]]:_(s16) = G_FPTRUNC [[COPY1]](s32)
    ; TC18OPS: [[FPEXT:%[0-9]+]]:_(s32) = G_FPEXT [[FPTRUNC]](s16)
    ; TC18OPS: [[FPEXT1:%[0-9]+]]:_(s32) = G_FPEXT [[FPTRUNC1]](s16)
    ; TC18OPS: [[FMAXNUM:%[0-9]+]]:_(s32) = G_FMAXNUM [[FPEXT]], [[FPEXT1]]
    ; TC18OPS: [[FPTRUNC2:%[0-9]+]]:_(s16) = G_FPTRUNC [[FMAXNUM]](s32)
    ; TC18OPS: [[FPEXT2:%[0-9]+]]:_(s32) = G_FPEXT [[FPTRUNC2]](s16)
    ; TC18OPS: $d4 = COPY [[FPEXT2]](s32)
    ; NOTC18OPS-LABEL: name: fmaxnum_s16
    ; NOTC18OPS: [[COPY:%[0-9]+]]:_(s32) = COPY $d4
    ; NOTC18OPS: [[COPY1:%[0-9]+]]:_(s32) = COPY $d5
    ; NOTC18OPS: [[FPTRUNC:%[0-9]+]]:_(s16) = G_FPTRUNC [[COPY]](s32)
    ; NOTC18OPS: [[FPTRUNC1:%[0-9]+]]:_(s16) = G_FPTRUNC [[COPY1]](s32)
    ; NOTC18OPS: [[FPEXT:%[0-9]+]]:_(s32) = G_FPEXT [[FPTRUNC]](s16)
    ; NOTC18OPS: [[FPEXT1:%[0-9]+]]:_(s32) = G_FPEXT [[FPTRUNC1]](s16)
    ; NOTC18OPS: ADJCALLSTACKDOWN 0, 0, implicit-def $a10, implicit $a10
    ; NOTC18OPS: $d4 = COPY [[FPEXT]](s32)
    ; NOTC18OPS: $d5 = COPY [[FPEXT1]](s32)
    ; NOTC18OPS: CALL &fmaxf, csr_tricore_uppercontext, implicit-def $a11, implicit $psw, implicit $d4, implicit $d5, implicit-def $d2
    ; NOTC18OPS: [[COPY2:%[0-9]+]]:_(s32) = COPY $d2
    ; NOTC18OPS: ADJCALLSTACKUP 0, 0, implicit-def $a10, implicit $a10
    ; NOTC18OPS: [[FPTRUNC2:%[0-9]+]]:_(s16) = G_FPTRUNC [[COPY2]](s32)
    ; NOTC18OPS: [[FPEXT2:%[0-9]+]]:_(s32) = G_FPEXT [[FPTRUNC2]](s16)
    ; NOTC18OPS: $d4 = COPY [[FPEXT2]](s32)
    %0:_(s32) = COPY $d4
    %1:_(s32) = COPY $d5
    %2:_(s16) = G_FPTRUNC %0
    %3:_(s16) = G_FPTRUNC %1
    %4:_(s16) = G_FMAXNUM %2, %3
    %5:_(s32) = G_FPEXT %4
    $d4 = COPY %5
...

---
name:            fminnum_s32
body:             |
  bb.0.entry:

    ; TC18OPS-LABEL: name: fminnum_s32
    ; TC18OPS: [[COPY:%[0-9]+]]:_(s32) = COPY $d4
    ; TC18OPS: [[COPY1:%[0-9]+]]:_(s32) = COPY $d5
    ; TC18OPS: [[FMINNUM:%[0-9]+]]:_(s32) = G_FMINNUM [[COPY]], [[COPY1]]
    ; TC18OPS: $d4 = COPY [[FMINNUM]](s32)
    ; NOTC18OPS-LABEL: name: fminnum_s32
    ; NOTC18OPS: [[COPY:%[0-9]+]]:_(s32) = COPY $d4
    ; NOTC18OPS: [[COPY1:%[0-9]+]]:_(s32) = COPY $d5
    ; NOTC18OPS: ADJCALLSTACKDOWN 0, 0, implicit-def $a10, implicit $a10
    ; NOTC18OPS: $d4 = COPY [[COPY]](s32)
    ; NOTC18OPS: $d5 = COPY [[COPY1]](s32)
    ; NOTC18OPS: CALL &fminf, csr_tricore_uppercontext, implicit-def $a11, implicit $psw, implicit $d4, implicit $d5, implicit-def $d2
    ; NOTC18OPS: [[COPY2:%[0-9]+]]:_(s32) = COPY $d2
    ; NOTC18OPS: ADJCALLSTACKUP 0, 0, implicit-def $a10, implicit $a10
    ; NOTC18OPS: $d4 = COPY [[COPY2]](s32)
    %0:_(s32) = COPY $d4
    %1:_(s32) = COPY $d5
    %2:_(s32) = G_FMINNUM %0, %1
    $d4 = COPY %2
...

---
name:            fminnum_s64
body:             |
  bb.0.entry:

    ; TC18OPS-LABEL: name: fminnum_s64
    ; TC18OPS: [[COPY:%[0-9]+]]:_(s64) = COPY $e4
    ; TC18OPS: [[COPY1:%[0-9]+]]:_(s64) = COPY $e6
    ; TC18OPS: [[FMINNUM:%[0-9]+]]:_(s64) = G_FMINNUM [[COPY]], [[COPY1]]
    ; TC18OPS: $e4 = COPY [[FMINNUM]](s64)
    ; NOTC18OPS-LABEL: name: fminnum_s64
    ; NOTC18OPS: [[COPY:%[0-9]+]]:_(s64) = COPY $e4
    ; NOTC18OPS: [[COPY1:%[0-9]+]]:_(s64) = COPY $e6
    ; NOTC18OPS: ADJCALLSTACKDOWN 0, 0, implicit-def $a10, implicit $a10
    ; NOTC18OPS: $e4 = COPY [[COPY]](s64)
    ; NOTC18OPS: $e6 = COPY [[COPY1]](s64)
    ; NOTC18OPS: CALL &fmin, csr_tricore_uppercontext, implicit-def $a11, implicit $psw, implicit $e4, implicit $e6, implicit-def $e2
    ; NOTC18OPS: [[COPY2:%[0-9]+]]:_(s64) = COPY $e2
    ; NOTC18OPS: ADJCALLSTACKUP 0, 0, implicit-def $a10, implicit $a10
    ; NOTC18OPS: $e4 = COPY [[COPY2]](s64)
    %0:_(s64) = COPY $e4
    %1:_(s64) = COPY $e6
    %2:_(s64) = G_FMINNUM %0, %1
    $e4 = COPY %2
...
