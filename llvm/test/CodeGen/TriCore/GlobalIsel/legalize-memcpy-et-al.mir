# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -mtriple=tricore -run-pass=legalizer -verify-machineinstrs %s -o - | FileCheck %s
---
name:            test_memcpy
tracksRegLiveness: true
body:             |
  bb.1:
    liveins: $a4, $a5, $d4

    ; CHECK-LABEL: name: test_memcpy
    ; CHECK: liveins: $a4, $a5, $d4
    ; CHECK: [[COPY:%[0-9]+]]:_(p0) = COPY $a4
    ; CHECK: [[COPY1:%[0-9]+]]:_(p0) = COPY $a5
    ; CHECK: [[COPY2:%[0-9]+]]:_(s32) = COPY $d4
    ; CHECK: ADJCALLSTACKDOWN 0, 0, implicit-def $a10, implicit $a10
    ; CHECK: $a4 = COPY [[COPY]](p0)
    ; CHECK: $a5 = COPY [[COPY1]](p0)
    ; CHECK: $d4 = COPY [[COPY2]](s32)
    ; CHECK: CALL &memcpy, csr_tricore_uppercontext, implicit-def $a11, implicit $psw, implicit $a4, implicit $a5, implicit $d4
    ; CHECK: ADJCALLSTACKUP 0, 0, implicit-def $a10, implicit $a10
    ; CHECK: RET implicit $a11
    %0:_(p0) = COPY $a4
    %1:_(p0) = COPY $a5
    %2:_(s32) = COPY $d4
    G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.memcpy), %0(p0), %1(p0), %2(s32), 0
    RET implicit $a11

...
---
name:            test_memmove
tracksRegLiveness: true
body:             |
  bb.1:
    liveins: $a4, $a5, $d4

    ; CHECK-LABEL: name: test_memmove
    ; CHECK: liveins: $a4, $a5, $d4
    ; CHECK: [[COPY:%[0-9]+]]:_(p0) = COPY $a4
    ; CHECK: [[COPY1:%[0-9]+]]:_(p0) = COPY $a5
    ; CHECK: [[COPY2:%[0-9]+]]:_(s32) = COPY $d4
    ; CHECK: ADJCALLSTACKDOWN 0, 0, implicit-def $a10, implicit $a10
    ; CHECK: $a4 = COPY [[COPY]](p0)
    ; CHECK: $a5 = COPY [[COPY1]](p0)
    ; CHECK: $d4 = COPY [[COPY2]](s32)
    ; CHECK: CALL &memmove, csr_tricore_uppercontext, implicit-def $a11, implicit $psw, implicit $a4, implicit $a5, implicit $d4
    ; CHECK: ADJCALLSTACKUP 0, 0, implicit-def $a10, implicit $a10
    ; CHECK: RET implicit $a11
    %0:_(p0) = COPY $a4
    %1:_(p0) = COPY $a5
    %2:_(s32) = COPY $d4
    G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.memmove), %0(p0), %1(p0), %2(s32), 0
    RET implicit $a11

...
---
name:            test_memset
tracksRegLiveness: true
body:             |
  bb.1:
    liveins: $a4, $d4, $d5

    ; CHECK-LABEL: name: test_memset
    ; CHECK: liveins: $a4, $d4, $d5
    ; CHECK: [[COPY:%[0-9]+]]:_(p0) = COPY $a4
    ; CHECK: [[COPY1:%[0-9]+]]:_(s32) = COPY $d4
    ; CHECK: [[COPY2:%[0-9]+]]:_(s32) = COPY $d5
    ; CHECK: ADJCALLSTACKDOWN 0, 0, implicit-def $a10, implicit $a10
    ; CHECK: $a4 = COPY [[COPY]](p0)
    ; CHECK: [[COPY3:%[0-9]+]]:_(s32) = COPY [[COPY1]](s32)
    ; CHECK: $d4 = COPY [[COPY3]](s32)
    ; CHECK: $d5 = COPY [[COPY2]](s32)
    ; CHECK: CALL &memset, csr_tricore_uppercontext, implicit-def $a11, implicit $psw, implicit $a4, implicit $d4, implicit $d5
    ; CHECK: ADJCALLSTACKUP 0, 0, implicit-def $a10, implicit $a10
    ; CHECK: RET implicit $a11
    %0:_(p0) = COPY $a4
    %1:_(s32) = COPY $d4
    %2:_(s32) = COPY $d5
    %3:_(s8) = G_TRUNC %1(s32)
    G_INTRINSIC_W_SIDE_EFFECTS intrinsic(@llvm.memset), %0(p0), %3(s8), %2(s32), 0
    RET implicit $a11

...

