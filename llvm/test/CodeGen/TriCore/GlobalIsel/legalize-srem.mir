# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -O0 -mtriple=tricore -global-isel -run-pass=legalizer -verify-machineinstrs %s -o - | FileCheck %s
---
name:            test_srem_scalar
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: test_srem_scalar
    ; CHECK: [[COPY:%[0-9]+]]:_(s32) = COPY $d4
    ; CHECK: [[COPY1:%[0-9]+]]:_(s32) = COPY $d5
    ; CHECK: [[SREM:%[0-9]+]]:_(s32) = G_SREM [[COPY]], [[COPY1]]
    ; CHECK: $d2 = COPY [[SREM]](s32)
    ; CHECK: RET implicit $a11, implicit $d2
    %0:_(s32) = COPY $d4
    %1:_(s32) = COPY $d5
    %2:_(s32) = G_SREM %0, %1
    $d2 = COPY %2(s32)
    RET implicit $a11, implicit $d2

...
---
name:            test_srem_small_scalar
body:     |
  bb.0.entry:
    ; CHECK-LABEL: name: test_srem_small_scalar
    ; CHECK: [[COPY:%[0-9]+]]:_(s32) = COPY $d4
    ; CHECK: [[COPY1:%[0-9]+]]:_(s32) = COPY $d5
    ; CHECK: [[COPY2:%[0-9]+]]:_(s32) = COPY [[COPY]](s32)
    ; CHECK: [[SEXT_INREG:%[0-9]+]]:_(s32) = G_SEXT_INREG [[COPY2]], 8
    ; CHECK: [[COPY3:%[0-9]+]]:_(s32) = COPY [[COPY1]](s32)
    ; CHECK: [[SEXT_INREG1:%[0-9]+]]:_(s32) = G_SEXT_INREG [[COPY3]], 8
    ; CHECK: [[SREM:%[0-9]+]]:_(s32) = G_SREM [[SEXT_INREG]], [[SEXT_INREG1]]
    ; CHECK: [[COPY4:%[0-9]+]]:_(s32) = COPY [[SREM]](s32)
    ; CHECK: $d2 = COPY [[COPY4]](s32)
    ; CHECK: RET implicit $a11, implicit $d2
    %0:_(s32) = COPY $d4
    %1:_(s32) = COPY $d5
    %2:_(s8) = G_TRUNC %0:_(s32)
    %3:_(s8) = G_TRUNC %1:_(s32)
    %4:_(s8) = G_SREM %2, %3
    %5:_(s32) = G_ANYEXT %4:_(s8)
    $d2 = COPY %5(s32)
    RET implicit $a11, implicit $d2

...

---
name:            test_srem_big_scalar
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: test_srem_big_scalar
    ; CHECK: [[COPY:%[0-9]+]]:_(s64) = COPY $e4
    ; CHECK: [[COPY1:%[0-9]+]]:_(s64) = COPY $e6
    ; CHECK: ADJCALLSTACKDOWN 0, 0, implicit-def $a10, implicit $a10
    ; CHECK: $e4 = COPY [[COPY]](s64)
    ; CHECK: $e6 = COPY [[COPY1]](s64)
    ; CHECK: CALL &__divdi3, csr_tricore_uppercontext, implicit-def $a11, implicit $psw, implicit $e4, implicit $e6, implicit-def $e2
    ; CHECK: [[COPY2:%[0-9]+]]:_(s64) = COPY $e2
    ; CHECK: ADJCALLSTACKUP 0, 0, implicit-def $a10, implicit $a10
    ; CHECK: [[UV:%[0-9]+]]:_(s32), [[UV1:%[0-9]+]]:_(s32) = G_UNMERGE_VALUES [[COPY2]](s64)
    ; CHECK: [[UV2:%[0-9]+]]:_(s32), [[UV3:%[0-9]+]]:_(s32) = G_UNMERGE_VALUES [[COPY1]](s64)
    ; CHECK: [[MUL:%[0-9]+]]:_(s32) = G_MUL [[UV]], [[UV2]]
    ; CHECK: [[MUL1:%[0-9]+]]:_(s32) = G_MUL [[UV1]], [[UV2]]
    ; CHECK: [[MUL2:%[0-9]+]]:_(s32) = G_MUL [[UV]], [[UV3]]
    ; CHECK: [[UMULH:%[0-9]+]]:_(s32) = G_UMULH [[UV]], [[UV2]]
    ; CHECK: [[ADD:%[0-9]+]]:_(s32) = G_ADD [[MUL1]], [[MUL2]]
    ; CHECK: [[ADD1:%[0-9]+]]:_(s32) = G_ADD [[ADD]], [[UMULH]]
    ; CHECK: [[UV4:%[0-9]+]]:_(s32), [[UV5:%[0-9]+]]:_(s32) = G_UNMERGE_VALUES [[COPY]](s64)
    ; CHECK: [[USUBO:%[0-9]+]]:_(s32), [[USUBO1:%[0-9]+]]:_(s1) = G_USUBO [[UV4]], [[MUL]]
    ; CHECK: [[USUBE:%[0-9]+]]:_(s32), [[USUBE1:%[0-9]+]]:_(s1) = G_USUBE [[UV5]], [[ADD1]], [[USUBO1]]
    ; CHECK: [[MV:%[0-9]+]]:_(s64) = G_MERGE_VALUES [[USUBO]](s32), [[USUBE]](s32)
    ; CHECK: $e2 = COPY [[MV]](s64)
    ; CHECK: RET implicit $a11, implicit $e2
    %0:_(s64) = COPY $e4
    %1:_(s64) = COPY $e6
    %2:_(s64) = G_SREM %0, %1
    $e2 = COPY %2(s64)
    RET implicit $a11, implicit $e2

...

