# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -O0 -mtriple=tricore -global-isel -run-pass=legalizer -verify-machineinstrs %s -o - | FileCheck %s

---
name:            test_uaddo
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: test_uaddo
    ; CHECK: [[COPY:%[0-9]+]]:_(s32) = COPY $d4
    ; CHECK: [[COPY1:%[0-9]+]]:_(s32) = COPY $d5
    ; CHECK: [[UADDO:%[0-9]+]]:_(s32), [[UADDO1:%[0-9]+]]:_(s1) = G_UADDO [[COPY]], [[COPY1]]
    ; CHECK: $d2 = COPY [[UADDO]](s32)
    %0:_(s32) = COPY $d4
    %1:_(s32) = COPY $d5
    %2:_(s32), %3:_(s1) = G_UADDO %0, %1
    $d2 = COPY %2(s32)

...

---
name:            test_uaddo_s16
body:             |
  bb.0.entry:

    ; CHECK-LABEL: name: test_uaddo_s16
    ; CHECK: [[COPY:%[0-9]+]]:_(s32) = COPY $d4
    ; CHECK: [[COPY1:%[0-9]+]]:_(s32) = COPY $d5
    ; CHECK: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 65535
    ; CHECK: [[COPY2:%[0-9]+]]:_(s32) = COPY [[COPY]](s32)
    ; CHECK: [[AND:%[0-9]+]]:_(s32) = G_AND [[COPY2]], [[C]]
    ; CHECK: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 65535
    ; CHECK: [[COPY3:%[0-9]+]]:_(s32) = COPY [[COPY1]](s32)
    ; CHECK: [[AND1:%[0-9]+]]:_(s32) = G_AND [[COPY3]], [[C1]]
    ; CHECK: [[ADD:%[0-9]+]]:_(s32) = G_ADD [[AND]], [[AND1]]
    ; CHECK: [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 65535
    ; CHECK: [[AND2:%[0-9]+]]:_(s32) = G_AND [[ADD]], [[C2]]
    ; CHECK: [[ICMP:%[0-9]+]]:_(s32) = G_ICMP intpred(ne), [[ADD]](s32), [[AND2]]
    ; CHECK: [[COPY4:%[0-9]+]]:_(s32) = COPY [[ADD]](s32)
    ; CHECK: [[COPY5:%[0-9]+]]:_(s32) = COPY [[ICMP]](s32)
    ; CHECK: $d4 = COPY [[COPY4]](s32)
    ; CHECK: $d5 = COPY [[COPY5]](s32)
    %0:_(s32) = COPY $d4
    %1:_(s32) = COPY $d5
    %2:_(s16) = G_TRUNC %0
    %3:_(s16) = G_TRUNC %1
    %4:_(s16), %5:_(s1) = G_UADDO %2, %3
    %6:_(s32) = G_ANYEXT %4
    %7:_(s32) = G_ANYEXT %5
    $d4 = COPY %6(s32)
    $d5 = COPY %7(s32)
...

---
name:            test_uadde
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: test_uadde
    ; CHECK: [[COPY:%[0-9]+]]:_(s32) = COPY $d4
    ; CHECK: [[COPY1:%[0-9]+]]:_(s32) = COPY $d5
    ; CHECK: [[TRUNC:%[0-9]+]]:_(s1) = G_TRUNC [[COPY1]](s32)
    ; CHECK: [[UADDE:%[0-9]+]]:_(s32), [[UADDE1:%[0-9]+]]:_(s1) = G_UADDE [[COPY]], [[COPY1]], [[TRUNC]]
    ; CHECK: $d2 = COPY [[UADDE]](s32)
    %0:_(s32) = COPY $d4
    %1:_(s32) = COPY $d5
    %2:_(s1) = G_TRUNC %1(s32)
    %3:_(s32), %4:_(s1) = G_UADDE %0, %1, %2
    $d2 = COPY %3(s32)

...

---
name:            test_usubo
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: test_usubo
    ; CHECK: [[COPY:%[0-9]+]]:_(s32) = COPY $d4
    ; CHECK: [[COPY1:%[0-9]+]]:_(s32) = COPY $d5
    ; CHECK: [[USUBO:%[0-9]+]]:_(s32), [[USUBO1:%[0-9]+]]:_(s1) = G_USUBO [[COPY]], [[COPY1]]
    ; CHECK: $d2 = COPY [[USUBO]](s32)
    %0:_(s32) = COPY $d4
    %1:_(s32) = COPY $d5
    %2:_(s32), %3:_(s1) = G_USUBO %0, %1
    $d2 = COPY %2(s32)

...

---
name:            test_usubo_s16
body:             |
  bb.0.entry:

    ; CHECK-LABEL: name: test_usubo_s16
    ; CHECK: [[COPY:%[0-9]+]]:_(s32) = COPY $d4
    ; CHECK: [[COPY1:%[0-9]+]]:_(s32) = COPY $d5
    ; CHECK: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 65535
    ; CHECK: [[COPY2:%[0-9]+]]:_(s32) = COPY [[COPY]](s32)
    ; CHECK: [[AND:%[0-9]+]]:_(s32) = G_AND [[COPY2]], [[C]]
    ; CHECK: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 65535
    ; CHECK: [[COPY3:%[0-9]+]]:_(s32) = COPY [[COPY1]](s32)
    ; CHECK: [[AND1:%[0-9]+]]:_(s32) = G_AND [[COPY3]], [[C1]]
    ; CHECK: [[SUB:%[0-9]+]]:_(s32) = G_SUB [[AND]], [[AND1]]
    ; CHECK: [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 65535
    ; CHECK: [[AND2:%[0-9]+]]:_(s32) = G_AND [[SUB]], [[C2]]
    ; CHECK: [[ICMP:%[0-9]+]]:_(s32) = G_ICMP intpred(ne), [[SUB]](s32), [[AND2]]
    ; CHECK: [[COPY4:%[0-9]+]]:_(s32) = COPY [[SUB]](s32)
    ; CHECK: [[COPY5:%[0-9]+]]:_(s32) = COPY [[ICMP]](s32)
    ; CHECK: $d4 = COPY [[COPY4]](s32)
    ; CHECK: $d5 = COPY [[COPY5]](s32)
    %0:_(s32) = COPY $d4
    %1:_(s32) = COPY $d5
    %2:_(s16) = G_TRUNC %0
    %3:_(s16) = G_TRUNC %1
    %4:_(s16), %5:_(s1) = G_USUBO %2, %3
    %6:_(s32) = G_ANYEXT %4
    %7:_(s32) = G_ANYEXT %5
    $d4 = COPY %6(s32)
    $d5 = COPY %7(s32)
...

---
name:            test_usube
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: test_usube
    ; CHECK: [[COPY:%[0-9]+]]:_(s32) = COPY $d4
    ; CHECK: [[COPY1:%[0-9]+]]:_(s32) = COPY $d5
    ; CHECK: [[TRUNC:%[0-9]+]]:_(s1) = G_TRUNC [[COPY1]](s32)
    ; CHECK: [[USUBE:%[0-9]+]]:_(s32), [[USUBE1:%[0-9]+]]:_(s1) = G_USUBE [[COPY]], [[COPY1]], [[TRUNC]]
    ; CHECK: $d2 = COPY [[USUBE]](s32)
    %0:_(s32) = COPY $d4
    %1:_(s32) = COPY $d5
    %2:_(s1) = G_TRUNC %1(s32)
    %3:_(s32), %4:_(s1) = G_USUBE %0, %1, %2
    $d2 = COPY %3(s32)

...

---
name:            test_umulh
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: test_umulh
    ; CHECK: [[COPY:%[0-9]+]]:_(s32) = COPY $d4
    ; CHECK: [[COPY1:%[0-9]+]]:_(s32) = COPY $d5
    ; CHECK: [[UMULH:%[0-9]+]]:_(s32) = G_UMULH [[COPY]], [[COPY1]]
    ; CHECK: $d2 = COPY [[UMULH]](s32)
    %0:_(s32) = COPY $d4
    %1:_(s32) = COPY $d5
    %2:_(s32) = G_UMULH %0, %1
    $d2 = COPY %2(s32)
...

---
name:            test_smulh
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: test_smulh
    ; CHECK: [[COPY:%[0-9]+]]:_(s32) = COPY $d4
    ; CHECK: [[COPY1:%[0-9]+]]:_(s32) = COPY $d5
    ; CHECK: [[SMULH:%[0-9]+]]:_(s32) = G_SMULH [[COPY]], [[COPY1]]
    ; CHECK: $d2 = COPY [[SMULH]](s32)
    %0:_(s32) = COPY $d4
    %1:_(s32) = COPY $d5
    %2:_(s32) = G_SMULH %0, %1
    $d2 = COPY %2(s32)
...

---
name:            test_umulo
body:             |
  bb.1:
    ; CHECK-LABEL: name: test_umulo
    ; CHECK: [[COPY:%[0-9]+]]:_(s32) = COPY $d4
    ; CHECK: [[COPY1:%[0-9]+]]:_(s32) = COPY $d5
    ; CHECK: [[MUL:%[0-9]+]]:_(s32) = G_MUL [[COPY]], [[COPY1]]
    ; CHECK: [[UMULH:%[0-9]+]]:_(s32) = G_UMULH [[COPY]], [[COPY1]]
    ; CHECK: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 0
    ; CHECK: [[ICMP:%[0-9]+]]:_(s32) = G_ICMP intpred(ne), [[UMULH]](s32), [[C]]
    ; CHECK: $d4 = COPY [[MUL]](s32)
    ; CHECK: [[COPY2:%[0-9]+]]:_(s32) = COPY [[ICMP]](s32)
    ; CHECK: $d5 = COPY [[COPY2]](s32)
    %0:_(s32) = COPY $d4
    %1:_(s32) = COPY $d5
    %2:_(s32), %3:_(s1) = G_UMULO %0, %1
    $d4 = COPY %2(s32)
    %4:_(s32) = G_ANYEXT %3(s1)
    $d5 = COPY %4(s32)
...

---
name:            test_smulo
body:             |
  bb.1:
    ; CHECK-LABEL: name: test_smulo
    ; CHECK: [[COPY:%[0-9]+]]:_(s32) = COPY $d4
    ; CHECK: [[COPY1:%[0-9]+]]:_(s32) = COPY $d5
    ; CHECK: [[MUL:%[0-9]+]]:_(s32) = G_MUL [[COPY]], [[COPY1]]
    ; CHECK: [[SMULH:%[0-9]+]]:_(s32) = G_SMULH [[COPY]], [[COPY1]]
    ; CHECK: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 31
    ; CHECK: [[ASHR:%[0-9]+]]:_(s32) = G_ASHR [[MUL]], [[C]](s32)
    ; CHECK: [[ICMP:%[0-9]+]]:_(s32) = G_ICMP intpred(ne), [[SMULH]](s32), [[ASHR]]
    ; CHECK: $d4 = COPY [[MUL]](s32)
    ; CHECK: [[COPY2:%[0-9]+]]:_(s32) = COPY [[ICMP]](s32)
    ; CHECK: $d5 = COPY [[COPY2]](s32)
    %0:_(s32) = COPY $d4
    %1:_(s32) = COPY $d5
    %2:_(s32), %3:_(s1) = G_SMULO %0, %1
    $d4 = COPY %2(s32)
    %4:_(s32) = G_ANYEXT %3(s1)
    $d5 = COPY %4(s32)
...
