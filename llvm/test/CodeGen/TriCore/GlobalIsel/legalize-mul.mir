# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -O0 -mtriple=tricore -global-isel -run-pass=legalizer -verify-machineinstrs %s -o - | FileCheck %s
---
name:            test_mul_scalar
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: test_mul_scalar
    ; CHECK: [[COPY:%[0-9]+]]:_(s32) = COPY $d4
    ; CHECK: [[COPY1:%[0-9]+]]:_(s32) = COPY $d5
    ; CHECK: [[MUL:%[0-9]+]]:_(s32) = G_MUL [[COPY]], [[COPY1]]
    ; CHECK: $d2 = COPY [[MUL]](s32)
    ; CHECK: RET implicit $a11, implicit $d2
    %0:_(s32) = COPY $d4
    %1:_(s32) = COPY $d5
    %2:_(s32) = G_MUL %0, %1
    $d2 = COPY %2(s32)
    RET implicit $a11, implicit $d2

...
---
name:            test_mul_small_scalar
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: test_mul_small_scalar
    ; CHECK: [[COPY:%[0-9]+]]:_(s32) = COPY $d4
    ; CHECK: [[COPY1:%[0-9]+]]:_(s32) = COPY $d5
    ; CHECK: [[COPY2:%[0-9]+]]:_(s32) = COPY [[COPY]](s32)
    ; CHECK: [[COPY3:%[0-9]+]]:_(s32) = COPY [[COPY1]](s32)
    ; CHECK: [[MUL:%[0-9]+]]:_(s32) = G_MUL [[COPY2]], [[COPY3]]
    ; CHECK: [[COPY4:%[0-9]+]]:_(s32) = COPY [[MUL]](s32)
    ; CHECK: $d2 = COPY [[COPY4]](s32)
    ; CHECK: RET implicit $a11, implicit $d2
    %0:_(s32) = COPY $d4
    %1:_(s32) = COPY $d5
    %2:_(s8) = G_TRUNC %0:_(s32)
    %3:_(s8) = G_TRUNC %1:_(s32)
    %4:_(s8) = G_MUL %2, %3
    %5:_(s32) = G_ANYEXT %4:_(s8)
    $d2 = COPY %5(s32)
    RET implicit $a11, implicit $d2

...
---
name:            test_mul_big_scalar
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: test_mul_big_scalar
    ; CHECK: [[COPY:%[0-9]+]]:_(s64) = COPY $e4
    ; CHECK: [[COPY1:%[0-9]+]]:_(s64) = COPY $e6
    ; CHECK: [[UV:%[0-9]+]]:_(s32), [[UV1:%[0-9]+]]:_(s32) = G_UNMERGE_VALUES [[COPY]](s64)
    ; CHECK: [[UV2:%[0-9]+]]:_(s32), [[UV3:%[0-9]+]]:_(s32) = G_UNMERGE_VALUES [[COPY1]](s64)
    ; CHECK: [[MUL:%[0-9]+]]:_(s32) = G_MUL [[UV]], [[UV2]]
    ; CHECK: [[MUL1:%[0-9]+]]:_(s32) = G_MUL [[UV1]], [[UV2]]
    ; CHECK: [[MUL2:%[0-9]+]]:_(s32) = G_MUL [[UV]], [[UV3]]
    ; CHECK: [[UMULH:%[0-9]+]]:_(s32) = G_UMULH [[UV]], [[UV2]]
    ; CHECK: [[ADD:%[0-9]+]]:_(s32) = G_ADD [[MUL1]], [[MUL2]]
    ; CHECK: [[ADD1:%[0-9]+]]:_(s32) = G_ADD [[ADD]], [[UMULH]]
    ; CHECK: [[MV:%[0-9]+]]:_(s64) = G_MERGE_VALUES [[MUL]](s32), [[ADD1]](s32)
    ; CHECK: $e2 = COPY [[MV]](s64)
    ; CHECK: RET implicit $a11, implicit $e2
    %0:_(s64) = COPY $e4
    %1:_(s64) = COPY $e6
    %2:_(s64) = G_MUL %0, %1
    $e2 = COPY %2(s64)
    RET implicit $a11, implicit $e2

...
---
name:            test_mul_uneven_scalar
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: test_mul_uneven_scalar
    ; CHECK: [[COPY:%[0-9]+]]:_(s32) = COPY $d4
    ; CHECK: [[COPY1:%[0-9]+]]:_(s32) = COPY $d5
    ; CHECK: [[ZEXT:%[0-9]+]]:_(s64) = G_ZEXT [[COPY]](s32)
    ; CHECK: [[ZEXT1:%[0-9]+]]:_(s64) = G_ZEXT [[COPY1]](s32)
    ; CHECK: [[UV:%[0-9]+]]:_(s32), [[UV1:%[0-9]+]]:_(s32) = G_UNMERGE_VALUES [[ZEXT]](s64)
    ; CHECK: [[UV2:%[0-9]+]]:_(s32), [[UV3:%[0-9]+]]:_(s32) = G_UNMERGE_VALUES [[ZEXT1]](s64)
    ; CHECK: [[MUL:%[0-9]+]]:_(s32) = G_MUL [[UV]], [[UV2]]
    ; CHECK: [[MUL1:%[0-9]+]]:_(s32) = G_MUL [[UV1]], [[UV2]]
    ; CHECK: [[MUL2:%[0-9]+]]:_(s32) = G_MUL [[UV]], [[UV3]]
    ; CHECK: [[UMULH:%[0-9]+]]:_(s32) = G_UMULH [[UV]], [[UV2]]
    ; CHECK: [[ADD:%[0-9]+]]:_(s32) = G_ADD [[MUL1]], [[MUL2]]
    ; CHECK: [[ADD1:%[0-9]+]]:_(s32) = G_ADD [[ADD]], [[UMULH]]
    ; CHECK: $d2 = COPY [[MUL]](s32)
    ; CHECK: RET implicit $a11, implicit $d2
    %0:_(s32) = COPY $d4
    %1:_(s32) = COPY $d5
    %2:_(s33) = G_ZEXT %0
    %3:_(s33) = G_ZEXT %1
    %4:_(s33) = G_MUL %2, %3
    %5:_(s32) = G_TRUNC %4
    $d2 = COPY %5(s32)
    RET implicit $a11, implicit $d2

...
