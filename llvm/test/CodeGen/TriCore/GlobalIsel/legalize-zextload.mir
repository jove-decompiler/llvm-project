# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -O0 -mtriple=tricore -global-isel -run-pass=legalizer -verify-machineinstrs %s -o - | FileCheck %s

---
name:            test_zextload
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: test_zextload
    ; CHECK: [[COPY:%[0-9]+]]:_(p0) = COPY $a4
    ; CHECK: [[ZEXTLOAD:%[0-9]+]]:_(s32) = G_ZEXTLOAD [[COPY]](p0) :: (load 1)
    ; CHECK: $d2 = COPY [[ZEXTLOAD]](s32)
    ; CHECK: [[ZEXTLOAD1:%[0-9]+]]:_(s32) = G_ZEXTLOAD [[COPY]](p0) :: (load 2)
    ; CHECK: $d2 = COPY [[ZEXTLOAD1]](s32)
    ; CHECK: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p0) :: (load 1)
    ; CHECK: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 255
    ; CHECK: [[ANYEXT:%[0-9]+]]:_(s64) = G_ANYEXT [[LOAD]](s32)
    ; CHECK: [[UV:%[0-9]+]]:_(s32), [[UV1:%[0-9]+]]:_(s32) = G_UNMERGE_VALUES [[ANYEXT]](s64)
    ; CHECK: [[UV2:%[0-9]+]]:_(s32), [[UV3:%[0-9]+]]:_(s32) = G_UNMERGE_VALUES [[C]](s64)
    ; CHECK: [[AND:%[0-9]+]]:_(s32) = G_AND [[UV]], [[UV2]]
    ; CHECK: [[AND1:%[0-9]+]]:_(s32) = G_AND [[UV1]], [[UV3]]
    ; CHECK: [[MV:%[0-9]+]]:_(s64) = G_MERGE_VALUES [[AND]](s32), [[AND1]](s32)
    ; CHECK: $e2 = COPY [[MV]](s64)
    ; CHECK: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p0) :: (load 2)
    ; CHECK: [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 65535
    ; CHECK: [[ANYEXT1:%[0-9]+]]:_(s64) = G_ANYEXT [[LOAD1]](s32)
    ; CHECK: [[UV4:%[0-9]+]]:_(s32), [[UV5:%[0-9]+]]:_(s32) = G_UNMERGE_VALUES [[ANYEXT1]](s64)
    ; CHECK: [[UV6:%[0-9]+]]:_(s32), [[UV7:%[0-9]+]]:_(s32) = G_UNMERGE_VALUES [[C1]](s64)
    ; CHECK: [[AND2:%[0-9]+]]:_(s32) = G_AND [[UV4]], [[UV6]]
    ; CHECK: [[AND3:%[0-9]+]]:_(s32) = G_AND [[UV5]], [[UV7]]
    ; CHECK: [[MV1:%[0-9]+]]:_(s64) = G_MERGE_VALUES [[AND2]](s32), [[AND3]](s32)
    ; CHECK: $e2 = COPY [[MV1]](s64)
    ; CHECK: [[LOAD2:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p0) :: (load 4)
    ; CHECK: [[ZEXT:%[0-9]+]]:_(s64) = G_ZEXT [[LOAD2]](s32)
    ; CHECK: $e2 = COPY [[ZEXT]](s64)
    %0:_(p0) = COPY $a4
    %1:_(s32) = G_ZEXTLOAD %0(p0) :: (load 1)
    $d2 = COPY %1(s32)
    %2:_(s32) = G_ZEXTLOAD %0(p0) :: (load 2)
    $d2 = COPY %2(s32)
    %3:_(s64) = G_ZEXTLOAD %0(p0) :: (load 1)
    $e2 = COPY %3(s64)
    %4:_(s64) = G_ZEXTLOAD %0(p0) :: (load 2)
    $e2 = COPY %4(s64)
    %5:_(s64) = G_ZEXTLOAD %0(p0) :: (load 4)
    $e2 = COPY %5(s64)
...
