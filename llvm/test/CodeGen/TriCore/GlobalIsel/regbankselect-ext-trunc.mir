# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -O0 -mtriple=tricore -global-isel -run-pass=regbankselect -verify-machineinstrs %s -o - | FileCheck %s

---
name:            test_anyext
legalized:       true
registers:
  - { id: 0, class: _ }
  - { id: 1, class: _ }
  - { id: 2, class: _ }
  - { id: 3, class: _ }
  - { id: 4, class: _ }
  - { id: 5, class: _ }
  - { id: 6, class: _ }
  - { id: 7, class: _ }
  - { id: 8, class: _ }
  - { id: 9, class: _ }
  - { id: 10, class: _ }
  - { id: 11, class: _ }
body: |
  bb.0:
    liveins: $e4
    ; CHECK-LABEL: name: test_anyext
    ; CHECK: [[COPY:%[0-9]+]]:dataregbank(s64) = COPY $e4
    ; CHECK: [[TRUNC:%[0-9]+]]:dataregbank(s1) = G_TRUNC [[COPY]](s64)
    ; CHECK: [[TRUNC1:%[0-9]+]]:dataregbank(s8) = G_TRUNC [[COPY]](s64)
    ; CHECK: [[TRUNC2:%[0-9]+]]:dataregbank(s16) = G_TRUNC [[COPY]](s64)
    ; CHECK: [[TRUNC3:%[0-9]+]]:dataregbank(s32) = G_TRUNC [[COPY]](s64)
    ; CHECK: [[ANYEXT:%[0-9]+]]:dataregbank(s32) = G_ANYEXT [[TRUNC]](s1)
    ; CHECK: [[ANYEXT1:%[0-9]+]]:dataregbank(s32) = G_ANYEXT [[TRUNC1]](s8)
    ; CHECK: [[ANYEXT2:%[0-9]+]]:dataregbank(s32) = G_ANYEXT [[TRUNC2]](s16)
    ; CHECK: [[ANYEXT3:%[0-9]+]]:dataregbank(s64) = G_ANYEXT [[TRUNC]](s1)
    ; CHECK: [[ANYEXT4:%[0-9]+]]:dataregbank(s64) = G_ANYEXT [[TRUNC1]](s8)
    ; CHECK: [[ANYEXT5:%[0-9]+]]:dataregbank(s64) = G_ANYEXT [[TRUNC2]](s16)
    ; CHECK: [[ANYEXT6:%[0-9]+]]:dataregbank(s64) = G_ANYEXT [[TRUNC3]](s32)
    ; CHECK: $d4 = COPY [[ANYEXT]](s32)
    ; CHECK: $d4 = COPY [[ANYEXT1]](s32)
    ; CHECK: $d4 = COPY [[ANYEXT2]](s32)
    ; CHECK: $e4 = COPY [[ANYEXT3]](s64)
    ; CHECK: $e4 = COPY [[ANYEXT4]](s64)
    ; CHECK: $e4 = COPY [[ANYEXT5]](s64)
    ; CHECK: $e4 = COPY [[ANYEXT6]](s64)
    %0(s64) = COPY $e4
    %1(s1) = G_TRUNC %0(s64)
    %2(s8) = G_TRUNC %0(s64)
    %3(s16) = G_TRUNC %0(s64)
    %4(s32) = G_TRUNC %0(s64)
    %5(s32) = G_ANYEXT %1(s1)
    %6(s32) = G_ANYEXT %2(s8)
    %7(s32) = G_ANYEXT %3(s16)
    %8(s64) = G_ANYEXT %1(s1)
    %9(s64) = G_ANYEXT %2(s8)
    %10(s64) = G_ANYEXT %3(s16)
    %11(s64) = G_ANYEXT %4(s32)
    $d4 = COPY %5(s32)
    $d4 = COPY %6(s32)
    $d4 = COPY %7(s32)
    $e4 = COPY %8(s64)
    $e4 = COPY %9(s64)
    $e4 = COPY %10(s64)
    $e4 = COPY %11(s64)
...

---
name:            test_sext
legalized:       true
registers:
  - { id: 0, class: _ }
  - { id: 1, class: _ }
  - { id: 2, class: _ }
  - { id: 3, class: _ }
  - { id: 4, class: _ }
  - { id: 5, class: _ }
  - { id: 6, class: _ }
  - { id: 7, class: _ }
  - { id: 8, class: _ }
  - { id: 9, class: _ }
  - { id: 10, class: _ }
  - { id: 11, class: _ }
body: |
  bb.0:
    liveins: $e4
    ; CHECK-LABEL: name: test_sext
    ; CHECK: [[COPY:%[0-9]+]]:dataregbank(s64) = COPY $e4
    ; CHECK: [[TRUNC:%[0-9]+]]:dataregbank(s1) = G_TRUNC [[COPY]](s64)
    ; CHECK: [[TRUNC1:%[0-9]+]]:dataregbank(s8) = G_TRUNC [[COPY]](s64)
    ; CHECK: [[TRUNC2:%[0-9]+]]:dataregbank(s16) = G_TRUNC [[COPY]](s64)
    ; CHECK: [[TRUNC3:%[0-9]+]]:dataregbank(s32) = G_TRUNC [[COPY]](s64)
    ; CHECK: [[SEXT:%[0-9]+]]:dataregbank(s32) = G_SEXT [[TRUNC]](s1)
    ; CHECK: [[SEXT1:%[0-9]+]]:dataregbank(s32) = G_SEXT [[TRUNC1]](s8)
    ; CHECK: [[SEXT2:%[0-9]+]]:dataregbank(s32) = G_SEXT [[TRUNC2]](s16)
    ; CHECK: [[SEXT3:%[0-9]+]]:dataregbank(s64) = G_SEXT [[TRUNC]](s1)
    ; CHECK: [[SEXT4:%[0-9]+]]:dataregbank(s64) = G_SEXT [[TRUNC1]](s8)
    ; CHECK: [[SEXT5:%[0-9]+]]:dataregbank(s64) = G_SEXT [[TRUNC2]](s16)
    ; CHECK: [[SEXT6:%[0-9]+]]:dataregbank(s64) = G_SEXT [[TRUNC3]](s32)
    ; CHECK: $d4 = COPY [[SEXT]](s32)
    ; CHECK: $d4 = COPY [[SEXT1]](s32)
    ; CHECK: $d4 = COPY [[SEXT2]](s32)
    ; CHECK: $e4 = COPY [[SEXT3]](s64)
    ; CHECK: $e4 = COPY [[SEXT4]](s64)
    ; CHECK: $e4 = COPY [[SEXT5]](s64)
    ; CHECK: $e4 = COPY [[SEXT6]](s64)
    %0(s64) = COPY $e4
    %1(s1) = G_TRUNC %0(s64)
    %2(s8) = G_TRUNC %0(s64)
    %3(s16) = G_TRUNC %0(s64)
    %4(s32) = G_TRUNC %0(s64)
    %5(s32) = G_SEXT %1(s1)
    %6(s32) = G_SEXT %2(s8)
    %7(s32) = G_SEXT %3(s16)
    %8(s64) = G_SEXT %1(s1)
    %9(s64) = G_SEXT %2(s8)
    %10(s64) = G_SEXT %3(s16)
    %11(s64) = G_SEXT %4(s32)
    $d4 = COPY %5(s32)
    $d4 = COPY %6(s32)
    $d4 = COPY %7(s32)
    $e4 = COPY %8(s64)
    $e4 = COPY %9(s64)
    $e4 = COPY %10(s64)
    $e4 = COPY %11(s64)
...

---
name:            test_zext
legalized:       true
registers:
  - { id: 0, class: _ }
  - { id: 1, class: _ }
  - { id: 2, class: _ }
  - { id: 3, class: _ }
  - { id: 4, class: _ }
  - { id: 5, class: _ }
  - { id: 6, class: _ }
  - { id: 7, class: _ }
  - { id: 8, class: _ }
  - { id: 9, class: _ }
  - { id: 10, class: _ }
  - { id: 11, class: _ }
body: |
  bb.0:
    liveins: $e4
    ; CHECK-LABEL: name: test_zext
    ; CHECK: [[COPY:%[0-9]+]]:dataregbank(s64) = COPY $e4
    ; CHECK: [[TRUNC:%[0-9]+]]:dataregbank(s1) = G_TRUNC [[COPY]](s64)
    ; CHECK: [[TRUNC1:%[0-9]+]]:dataregbank(s8) = G_TRUNC [[COPY]](s64)
    ; CHECK: [[TRUNC2:%[0-9]+]]:dataregbank(s16) = G_TRUNC [[COPY]](s64)
    ; CHECK: [[TRUNC3:%[0-9]+]]:dataregbank(s32) = G_TRUNC [[COPY]](s64)
    ; CHECK: [[ZEXT:%[0-9]+]]:dataregbank(s32) = G_ZEXT [[TRUNC]](s1)
    ; CHECK: [[ZEXT1:%[0-9]+]]:dataregbank(s32) = G_ZEXT [[TRUNC1]](s8)
    ; CHECK: [[ZEXT2:%[0-9]+]]:dataregbank(s32) = G_ZEXT [[TRUNC2]](s16)
    ; CHECK: [[ZEXT3:%[0-9]+]]:dataregbank(s64) = G_ZEXT [[TRUNC]](s1)
    ; CHECK: [[ZEXT4:%[0-9]+]]:dataregbank(s64) = G_ZEXT [[TRUNC1]](s8)
    ; CHECK: [[ZEXT5:%[0-9]+]]:dataregbank(s64) = G_ZEXT [[TRUNC2]](s16)
    ; CHECK: [[ZEXT6:%[0-9]+]]:dataregbank(s64) = G_ZEXT [[TRUNC3]](s32)
    ; CHECK: $d4 = COPY [[ZEXT]](s32)
    ; CHECK: $d4 = COPY [[ZEXT1]](s32)
    ; CHECK: $d4 = COPY [[ZEXT2]](s32)
    ; CHECK: $e4 = COPY [[ZEXT3]](s64)
    ; CHECK: $e4 = COPY [[ZEXT4]](s64)
    ; CHECK: $e4 = COPY [[ZEXT5]](s64)
    ; CHECK: $e4 = COPY [[ZEXT6]](s64)
    %0(s64) = COPY $e4
    %1(s1) = G_TRUNC %0(s64)
    %2(s8) = G_TRUNC %0(s64)
    %3(s16) = G_TRUNC %0(s64)
    %4(s32) = G_TRUNC %0(s64)
    %5(s32) = G_ZEXT %1(s1)
    %6(s32) = G_ZEXT %2(s8)
    %7(s32) = G_ZEXT %3(s16)
    %8(s64) = G_ZEXT %1(s1)
    %9(s64) = G_ZEXT %2(s8)
    %10(s64) = G_ZEXT %3(s16)
    %11(s64) = G_ZEXT %4(s32)
    $d4 = COPY %5(s32)
    $d4 = COPY %6(s32)
    $d4 = COPY %7(s32)
    $e4 = COPY %8(s64)
    $e4 = COPY %9(s64)
    $e4 = COPY %10(s64)
    $e4 = COPY %11(s64)
...
