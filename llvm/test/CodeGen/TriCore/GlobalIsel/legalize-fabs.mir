# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -O0 -mtriple=tricore -global-isel -run-pass=legalizer \
# RUN:   -verify-machineinstrs %s -o - | FileCheck %s


---
name:            fabs_s32
body:             |
  bb.0:
    liveins: $d4

    ; CHECK-LABEL: name: fabs_s32
    ; CHECK: [[COPY:%[0-9]+]]:_(s32) = COPY $d4
    ; CHECK: [[FABS:%[0-9]+]]:_(s32) = G_FABS [[COPY]]
    ; CHECK: $d4 = COPY [[FABS]](s32)
    %0:_(s32) = COPY $d4
    %1:_(s32) = G_FABS %0(s32)
    $d4 = COPY %1(s32)
...

---
name:            fabs_s64
body:             |
  bb.0:
    liveins: $e4

    ; CHECK-LABEL: name: fabs_s64
    ; CHECK: [[COPY:%[0-9]+]]:_(s64) = COPY $e4
    ; CHECK: [[FABS:%[0-9]+]]:_(s64) = G_FABS [[COPY]]
    ; CHECK: $e4 = COPY [[FABS]](s64)
    %0:_(s64) = COPY $e4
    %1:_(s64) = G_FABS %0(s64)
    $e4 = COPY %1(s64)
...

---
name:            fabs_smaller_than_s32
body:             |
  bb.0:
    liveins: $d4

    ; CHECK-LABEL: name: fabs_smaller_than_s32
    ; CHECK: [[COPY:%[0-9]+]]:_(s32) = COPY $d4
    ; CHECK: [[TRUNC:%[0-9]+]]:_(s16) = G_TRUNC [[COPY]](s32)
    ; CHECK: [[FPEXT:%[0-9]+]]:_(s32) = G_FPEXT [[TRUNC]](s16)
    ; CHECK: [[FABS:%[0-9]+]]:_(s32) = G_FABS [[FPEXT]]
    ; CHECK: [[FPTRUNC:%[0-9]+]]:_(s16) = G_FPTRUNC [[FABS]](s32)
    ; CHECK: [[ANYEXT:%[0-9]+]]:_(s32) = G_ANYEXT [[FPTRUNC]](s16)
    ; CHECK: $d4 = COPY [[ANYEXT]](s32)
    %0:_(s32) = COPY $d4
    %1:_(s16) = G_TRUNC %0:_(s32)
    %2:_(s16) = G_FABS %1
    %3:_(s32) = G_ANYEXT %2:_(s16)
    $d4 = COPY %3
...

