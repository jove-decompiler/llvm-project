# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -O0 -mtriple=tricore -global-isel -run-pass=legalizer \
# RUN:   -verify-machineinstrs %s -o - | FileCheck -check-prefixes=TC162OPS %s
# RUN: llc -O0 -mtriple=tricore -mattr=-tc162 -global-isel -run-pass=legalizer \
# RUN:   -verify-machineinstrs %s -o - | FileCheck -check-prefixes=NOTC162OPS %s

---
name:            test_ctpop_s32_s32
body:             |
  bb.0.entry:
    ; TC162OPS-LABEL: name: test_ctpop_s32_s32
    ; TC162OPS: [[COPY:%[0-9]+]]:_(s32) = COPY $d4
    ; TC162OPS: [[CTPOP:%[0-9]+]]:_(s32) = G_CTPOP [[COPY]](s32)
    ; TC162OPS: $d2 = COPY [[CTPOP]](s32)
    ; NOTC162OPS-LABEL: name: test_ctpop_s32_s32
    ; NOTC162OPS: [[COPY:%[0-9]+]]:_(s32) = COPY $d4
    ; NOTC162OPS: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; NOTC162OPS: [[LSHR:%[0-9]+]]:_(s32) = G_LSHR [[COPY]], [[C]](s32)
    ; NOTC162OPS: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 1431655765
    ; NOTC162OPS: [[AND:%[0-9]+]]:_(s32) = G_AND [[LSHR]], [[C1]]
    ; NOTC162OPS: [[SUB:%[0-9]+]]:_(s32) = G_SUB [[COPY]], [[AND]]
    ; NOTC162OPS: [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 2
    ; NOTC162OPS: [[LSHR1:%[0-9]+]]:_(s32) = G_LSHR [[SUB]], [[C2]](s32)
    ; NOTC162OPS: [[C3:%[0-9]+]]:_(s32) = G_CONSTANT i32 858993459
    ; NOTC162OPS: [[AND1:%[0-9]+]]:_(s32) = G_AND [[LSHR1]], [[C3]]
    ; NOTC162OPS: [[AND2:%[0-9]+]]:_(s32) = G_AND [[SUB]], [[C3]]
    ; NOTC162OPS: [[ADD:%[0-9]+]]:_(s32) = G_ADD [[AND1]], [[AND2]]
    ; NOTC162OPS: [[C4:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; NOTC162OPS: [[LSHR2:%[0-9]+]]:_(s32) = G_LSHR [[ADD]], [[C4]](s32)
    ; NOTC162OPS: [[ADD1:%[0-9]+]]:_(s32) = G_ADD [[LSHR2]], [[ADD]]
    ; NOTC162OPS: [[C5:%[0-9]+]]:_(s32) = G_CONSTANT i32 252645135
    ; NOTC162OPS: [[AND3:%[0-9]+]]:_(s32) = G_AND [[ADD1]], [[C5]]
    ; NOTC162OPS: [[C6:%[0-9]+]]:_(s32) = G_CONSTANT i32 16843009
    ; NOTC162OPS: [[MUL:%[0-9]+]]:_(s32) = G_MUL [[AND3]], [[C6]]
    ; NOTC162OPS: [[C7:%[0-9]+]]:_(s32) = G_CONSTANT i32 24
    ; NOTC162OPS: [[LSHR3:%[0-9]+]]:_(s32) = G_LSHR [[MUL]], [[C7]](s32)
    ; NOTC162OPS: $d2 = COPY [[LSHR3]](s32)
    %0:_(s32) = COPY $d4
    %1:_(s32) = G_CTPOP %0
    $d2 = COPY %1(s32)
...

---
name:            test_ctpop_smaller_s32_smaller_s32
body:             |
  bb.0.entry:
    ; TC162OPS-LABEL: name: test_ctpop_smaller_s32_smaller_s32
    ; TC162OPS: [[COPY:%[0-9]+]]:_(s32) = COPY $d4
    ; TC162OPS: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; TC162OPS: [[COPY1:%[0-9]+]]:_(s32) = COPY [[COPY]](s32)
    ; TC162OPS: [[AND:%[0-9]+]]:_(s32) = G_AND [[COPY1]], [[C]]
    ; TC162OPS: [[CTPOP:%[0-9]+]]:_(s32) = G_CTPOP [[AND]](s32)
    ; TC162OPS: [[COPY2:%[0-9]+]]:_(s32) = COPY [[CTPOP]](s32)
    ; TC162OPS: [[COPY3:%[0-9]+]]:_(s32) = COPY [[COPY2]](s32)
    ; TC162OPS: $d2 = COPY [[COPY3]](s32)
    ; NOTC162OPS-LABEL: name: test_ctpop_smaller_s32_smaller_s32
    ; NOTC162OPS: [[COPY:%[0-9]+]]:_(s32) = COPY $d4
    ; NOTC162OPS: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; NOTC162OPS: [[COPY1:%[0-9]+]]:_(s32) = COPY [[COPY]](s32)
    ; NOTC162OPS: [[AND:%[0-9]+]]:_(s32) = G_AND [[COPY1]], [[C]]
    ; NOTC162OPS: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; NOTC162OPS: [[LSHR:%[0-9]+]]:_(s32) = G_LSHR [[AND]], [[C1]](s32)
    ; NOTC162OPS: [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 1431655765
    ; NOTC162OPS: [[AND1:%[0-9]+]]:_(s32) = G_AND [[LSHR]], [[C2]]
    ; NOTC162OPS: [[SUB:%[0-9]+]]:_(s32) = G_SUB [[AND]], [[AND1]]
    ; NOTC162OPS: [[C3:%[0-9]+]]:_(s32) = G_CONSTANT i32 2
    ; NOTC162OPS: [[LSHR1:%[0-9]+]]:_(s32) = G_LSHR [[SUB]], [[C3]](s32)
    ; NOTC162OPS: [[C4:%[0-9]+]]:_(s32) = G_CONSTANT i32 858993459
    ; NOTC162OPS: [[AND2:%[0-9]+]]:_(s32) = G_AND [[LSHR1]], [[C4]]
    ; NOTC162OPS: [[AND3:%[0-9]+]]:_(s32) = G_AND [[SUB]], [[C4]]
    ; NOTC162OPS: [[ADD:%[0-9]+]]:_(s32) = G_ADD [[AND2]], [[AND3]]
    ; NOTC162OPS: [[C5:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; NOTC162OPS: [[LSHR2:%[0-9]+]]:_(s32) = G_LSHR [[ADD]], [[C5]](s32)
    ; NOTC162OPS: [[ADD1:%[0-9]+]]:_(s32) = G_ADD [[LSHR2]], [[ADD]]
    ; NOTC162OPS: [[C6:%[0-9]+]]:_(s32) = G_CONSTANT i32 252645135
    ; NOTC162OPS: [[AND4:%[0-9]+]]:_(s32) = G_AND [[ADD1]], [[C6]]
    ; NOTC162OPS: [[C7:%[0-9]+]]:_(s32) = G_CONSTANT i32 16843009
    ; NOTC162OPS: [[MUL:%[0-9]+]]:_(s32) = G_MUL [[AND4]], [[C7]]
    ; NOTC162OPS: [[C8:%[0-9]+]]:_(s32) = G_CONSTANT i32 24
    ; NOTC162OPS: [[LSHR3:%[0-9]+]]:_(s32) = G_LSHR [[MUL]], [[C8]](s32)
    ; NOTC162OPS: [[COPY2:%[0-9]+]]:_(s32) = COPY [[LSHR3]](s32)
    ; NOTC162OPS: [[COPY3:%[0-9]+]]:_(s32) = COPY [[COPY2]](s32)
    ; NOTC162OPS: $d2 = COPY [[COPY3]](s32)
    %0:_(s32) = COPY $d4
    %1:_(s8) = G_TRUNC %0:_(s32)
    %2:_(s8) = G_CTPOP %1
    %3:_(s32) = G_ANYEXT %2:_(s8)
    $d2 = COPY %3(s32)
...

---
name:            test_ctpop_smaller_s32_s32
body:             |
  bb.0.entry:
    ; TC162OPS-LABEL: name: test_ctpop_smaller_s32_s32
    ; TC162OPS: [[COPY:%[0-9]+]]:_(s32) = COPY $d4
    ; TC162OPS: [[CTPOP:%[0-9]+]]:_(s32) = G_CTPOP [[COPY]](s32)
    ; TC162OPS: [[COPY1:%[0-9]+]]:_(s32) = COPY [[CTPOP]](s32)
    ; TC162OPS: $d2 = COPY [[COPY1]](s32)
    ; NOTC162OPS-LABEL: name: test_ctpop_smaller_s32_s32
    ; NOTC162OPS: [[COPY:%[0-9]+]]:_(s32) = COPY $d4
    ; NOTC162OPS: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; NOTC162OPS: [[LSHR:%[0-9]+]]:_(s32) = G_LSHR [[COPY]], [[C]](s32)
    ; NOTC162OPS: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 1431655765
    ; NOTC162OPS: [[AND:%[0-9]+]]:_(s32) = G_AND [[LSHR]], [[C1]]
    ; NOTC162OPS: [[SUB:%[0-9]+]]:_(s32) = G_SUB [[COPY]], [[AND]]
    ; NOTC162OPS: [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 2
    ; NOTC162OPS: [[LSHR1:%[0-9]+]]:_(s32) = G_LSHR [[SUB]], [[C2]](s32)
    ; NOTC162OPS: [[C3:%[0-9]+]]:_(s32) = G_CONSTANT i32 858993459
    ; NOTC162OPS: [[AND1:%[0-9]+]]:_(s32) = G_AND [[LSHR1]], [[C3]]
    ; NOTC162OPS: [[AND2:%[0-9]+]]:_(s32) = G_AND [[SUB]], [[C3]]
    ; NOTC162OPS: [[ADD:%[0-9]+]]:_(s32) = G_ADD [[AND1]], [[AND2]]
    ; NOTC162OPS: [[C4:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; NOTC162OPS: [[LSHR2:%[0-9]+]]:_(s32) = G_LSHR [[ADD]], [[C4]](s32)
    ; NOTC162OPS: [[ADD1:%[0-9]+]]:_(s32) = G_ADD [[LSHR2]], [[ADD]]
    ; NOTC162OPS: [[C5:%[0-9]+]]:_(s32) = G_CONSTANT i32 252645135
    ; NOTC162OPS: [[AND3:%[0-9]+]]:_(s32) = G_AND [[ADD1]], [[C5]]
    ; NOTC162OPS: [[C6:%[0-9]+]]:_(s32) = G_CONSTANT i32 16843009
    ; NOTC162OPS: [[MUL:%[0-9]+]]:_(s32) = G_MUL [[AND3]], [[C6]]
    ; NOTC162OPS: [[C7:%[0-9]+]]:_(s32) = G_CONSTANT i32 24
    ; NOTC162OPS: [[LSHR3:%[0-9]+]]:_(s32) = G_LSHR [[MUL]], [[C7]](s32)
    ; NOTC162OPS: [[COPY1:%[0-9]+]]:_(s32) = COPY [[LSHR3]](s32)
    ; NOTC162OPS: $d2 = COPY [[COPY1]](s32)
    %0:_(s32) = COPY $d4
    %1:_(s8) = G_CTPOP %0
    %2:_(s32) = G_ANYEXT %1:_(s8)
    $d2 = COPY %2(s32)
...

---
name:            test_ctpop_smaller_s32_bigger_s32
body:             |
  bb.0.entry:
    ; TC162OPS-LABEL: name: test_ctpop_smaller_s32_bigger_s32
    ; TC162OPS: [[COPY:%[0-9]+]]:_(s32) = COPY $d4
    ; TC162OPS: [[ANYEXT:%[0-9]+]]:_(s64) = G_ANYEXT [[COPY]](s32)
    ; TC162OPS: [[UV:%[0-9]+]]:_(s32), [[UV1:%[0-9]+]]:_(s32) = G_UNMERGE_VALUES [[ANYEXT]](s64)
    ; TC162OPS: [[CTPOP:%[0-9]+]]:_(s32) = G_CTPOP [[UV]](s32)
    ; TC162OPS: [[CTPOP1:%[0-9]+]]:_(s32) = G_CTPOP [[UV1]](s32)
    ; TC162OPS: [[ADD:%[0-9]+]]:_(s32) = G_ADD [[CTPOP1]], [[CTPOP]]
    ; TC162OPS: [[COPY1:%[0-9]+]]:_(s32) = COPY [[ADD]](s32)
    ; TC162OPS: $d2 = COPY [[COPY1]](s32)
    ; NOTC162OPS-LABEL: name: test_ctpop_smaller_s32_bigger_s32
    ; NOTC162OPS: [[COPY:%[0-9]+]]:_(s32) = COPY $d4
    ; NOTC162OPS: [[ANYEXT:%[0-9]+]]:_(s64) = G_ANYEXT [[COPY]](s32)
    ; NOTC162OPS: [[UV:%[0-9]+]]:_(s32), [[UV1:%[0-9]+]]:_(s32) = G_UNMERGE_VALUES [[ANYEXT]](s64)
    ; NOTC162OPS: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; NOTC162OPS: [[LSHR:%[0-9]+]]:_(s32) = G_LSHR [[UV]], [[C]](s32)
    ; NOTC162OPS: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 1431655765
    ; NOTC162OPS: [[AND:%[0-9]+]]:_(s32) = G_AND [[LSHR]], [[C1]]
    ; NOTC162OPS: [[SUB:%[0-9]+]]:_(s32) = G_SUB [[UV]], [[AND]]
    ; NOTC162OPS: [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 2
    ; NOTC162OPS: [[LSHR1:%[0-9]+]]:_(s32) = G_LSHR [[SUB]], [[C2]](s32)
    ; NOTC162OPS: [[C3:%[0-9]+]]:_(s32) = G_CONSTANT i32 858993459
    ; NOTC162OPS: [[AND1:%[0-9]+]]:_(s32) = G_AND [[LSHR1]], [[C3]]
    ; NOTC162OPS: [[AND2:%[0-9]+]]:_(s32) = G_AND [[SUB]], [[C3]]
    ; NOTC162OPS: [[ADD:%[0-9]+]]:_(s32) = G_ADD [[AND1]], [[AND2]]
    ; NOTC162OPS: [[C4:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; NOTC162OPS: [[LSHR2:%[0-9]+]]:_(s32) = G_LSHR [[ADD]], [[C4]](s32)
    ; NOTC162OPS: [[ADD1:%[0-9]+]]:_(s32) = G_ADD [[LSHR2]], [[ADD]]
    ; NOTC162OPS: [[C5:%[0-9]+]]:_(s32) = G_CONSTANT i32 252645135
    ; NOTC162OPS: [[AND3:%[0-9]+]]:_(s32) = G_AND [[ADD1]], [[C5]]
    ; NOTC162OPS: [[C6:%[0-9]+]]:_(s32) = G_CONSTANT i32 16843009
    ; NOTC162OPS: [[MUL:%[0-9]+]]:_(s32) = G_MUL [[AND3]], [[C6]]
    ; NOTC162OPS: [[C7:%[0-9]+]]:_(s32) = G_CONSTANT i32 24
    ; NOTC162OPS: [[LSHR3:%[0-9]+]]:_(s32) = G_LSHR [[MUL]], [[C7]](s32)
    ; NOTC162OPS: [[C8:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; NOTC162OPS: [[LSHR4:%[0-9]+]]:_(s32) = G_LSHR [[UV1]], [[C8]](s32)
    ; NOTC162OPS: [[C9:%[0-9]+]]:_(s32) = G_CONSTANT i32 1431655765
    ; NOTC162OPS: [[AND4:%[0-9]+]]:_(s32) = G_AND [[LSHR4]], [[C9]]
    ; NOTC162OPS: [[SUB1:%[0-9]+]]:_(s32) = G_SUB [[UV1]], [[AND4]]
    ; NOTC162OPS: [[C10:%[0-9]+]]:_(s32) = G_CONSTANT i32 2
    ; NOTC162OPS: [[LSHR5:%[0-9]+]]:_(s32) = G_LSHR [[SUB1]], [[C10]](s32)
    ; NOTC162OPS: [[C11:%[0-9]+]]:_(s32) = G_CONSTANT i32 858993459
    ; NOTC162OPS: [[AND5:%[0-9]+]]:_(s32) = G_AND [[LSHR5]], [[C11]]
    ; NOTC162OPS: [[AND6:%[0-9]+]]:_(s32) = G_AND [[SUB1]], [[C11]]
    ; NOTC162OPS: [[ADD2:%[0-9]+]]:_(s32) = G_ADD [[AND5]], [[AND6]]
    ; NOTC162OPS: [[C12:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; NOTC162OPS: [[LSHR6:%[0-9]+]]:_(s32) = G_LSHR [[ADD2]], [[C12]](s32)
    ; NOTC162OPS: [[ADD3:%[0-9]+]]:_(s32) = G_ADD [[LSHR6]], [[ADD2]]
    ; NOTC162OPS: [[C13:%[0-9]+]]:_(s32) = G_CONSTANT i32 252645135
    ; NOTC162OPS: [[AND7:%[0-9]+]]:_(s32) = G_AND [[ADD3]], [[C13]]
    ; NOTC162OPS: [[C14:%[0-9]+]]:_(s32) = G_CONSTANT i32 16843009
    ; NOTC162OPS: [[MUL1:%[0-9]+]]:_(s32) = G_MUL [[AND7]], [[C14]]
    ; NOTC162OPS: [[C15:%[0-9]+]]:_(s32) = G_CONSTANT i32 24
    ; NOTC162OPS: [[LSHR7:%[0-9]+]]:_(s32) = G_LSHR [[MUL1]], [[C15]](s32)
    ; NOTC162OPS: [[ADD4:%[0-9]+]]:_(s32) = G_ADD [[LSHR7]], [[LSHR3]]
    ; NOTC162OPS: [[COPY1:%[0-9]+]]:_(s32) = COPY [[ADD4]](s32)
    ; NOTC162OPS: $d2 = COPY [[COPY1]](s32)
    %0:_(s32) = COPY $d4
    %1:_(s64) = G_ANYEXT %0:_(s32)
    %2:_(s16) = G_CTPOP %1
    %3:_(s32) = G_ANYEXT %2:_(s16)
    $d2 = COPY %3(s32)
...

---
name:            test_ctpop_s32_smaller_s32
body:             |
  bb.0.entry:
    ; TC162OPS-LABEL: name: test_ctpop_s32_smaller_s32
    ; TC162OPS: [[COPY:%[0-9]+]]:_(s32) = COPY $d4
    ; TC162OPS: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; TC162OPS: [[COPY1:%[0-9]+]]:_(s32) = COPY [[COPY]](s32)
    ; TC162OPS: [[AND:%[0-9]+]]:_(s32) = G_AND [[COPY1]], [[C]]
    ; TC162OPS: [[CTPOP:%[0-9]+]]:_(s32) = G_CTPOP [[AND]](s32)
    ; TC162OPS: [[COPY2:%[0-9]+]]:_(s32) = COPY [[CTPOP]](s32)
    ; TC162OPS: $d2 = COPY [[COPY2]](s32)
    ; NOTC162OPS-LABEL: name: test_ctpop_s32_smaller_s32
    ; NOTC162OPS: [[COPY:%[0-9]+]]:_(s32) = COPY $d4
    ; NOTC162OPS: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; NOTC162OPS: [[COPY1:%[0-9]+]]:_(s32) = COPY [[COPY]](s32)
    ; NOTC162OPS: [[AND:%[0-9]+]]:_(s32) = G_AND [[COPY1]], [[C]]
    ; NOTC162OPS: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; NOTC162OPS: [[LSHR:%[0-9]+]]:_(s32) = G_LSHR [[AND]], [[C1]](s32)
    ; NOTC162OPS: [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 1431655765
    ; NOTC162OPS: [[AND1:%[0-9]+]]:_(s32) = G_AND [[LSHR]], [[C2]]
    ; NOTC162OPS: [[SUB:%[0-9]+]]:_(s32) = G_SUB [[AND]], [[AND1]]
    ; NOTC162OPS: [[C3:%[0-9]+]]:_(s32) = G_CONSTANT i32 2
    ; NOTC162OPS: [[LSHR1:%[0-9]+]]:_(s32) = G_LSHR [[SUB]], [[C3]](s32)
    ; NOTC162OPS: [[C4:%[0-9]+]]:_(s32) = G_CONSTANT i32 858993459
    ; NOTC162OPS: [[AND2:%[0-9]+]]:_(s32) = G_AND [[LSHR1]], [[C4]]
    ; NOTC162OPS: [[AND3:%[0-9]+]]:_(s32) = G_AND [[SUB]], [[C4]]
    ; NOTC162OPS: [[ADD:%[0-9]+]]:_(s32) = G_ADD [[AND2]], [[AND3]]
    ; NOTC162OPS: [[C5:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; NOTC162OPS: [[LSHR2:%[0-9]+]]:_(s32) = G_LSHR [[ADD]], [[C5]](s32)
    ; NOTC162OPS: [[ADD1:%[0-9]+]]:_(s32) = G_ADD [[LSHR2]], [[ADD]]
    ; NOTC162OPS: [[C6:%[0-9]+]]:_(s32) = G_CONSTANT i32 252645135
    ; NOTC162OPS: [[AND4:%[0-9]+]]:_(s32) = G_AND [[ADD1]], [[C6]]
    ; NOTC162OPS: [[C7:%[0-9]+]]:_(s32) = G_CONSTANT i32 16843009
    ; NOTC162OPS: [[MUL:%[0-9]+]]:_(s32) = G_MUL [[AND4]], [[C7]]
    ; NOTC162OPS: [[C8:%[0-9]+]]:_(s32) = G_CONSTANT i32 24
    ; NOTC162OPS: [[LSHR3:%[0-9]+]]:_(s32) = G_LSHR [[MUL]], [[C8]](s32)
    ; NOTC162OPS: [[COPY2:%[0-9]+]]:_(s32) = COPY [[LSHR3]](s32)
    ; NOTC162OPS: $d2 = COPY [[COPY2]](s32)
    %0:_(s32) = COPY $d4
    %1:_(s8) = G_TRUNC %0:_(s32)
    %2:_(s32) = G_CTPOP %1
    $d2 = COPY %2(s32)
...

---
name:            test_ctpop_s32_bigger_s32
body:             |
  bb.0.entry:
    ; TC162OPS-LABEL: name: test_ctpop_s32_bigger_s32
    ; TC162OPS: [[COPY:%[0-9]+]]:_(s32) = COPY $d4
    ; TC162OPS: [[ANYEXT:%[0-9]+]]:_(s64) = G_ANYEXT [[COPY]](s32)
    ; TC162OPS: [[UV:%[0-9]+]]:_(s32), [[UV1:%[0-9]+]]:_(s32) = G_UNMERGE_VALUES [[ANYEXT]](s64)
    ; TC162OPS: [[CTPOP:%[0-9]+]]:_(s32) = G_CTPOP [[UV]](s32)
    ; TC162OPS: [[CTPOP1:%[0-9]+]]:_(s32) = G_CTPOP [[UV1]](s32)
    ; TC162OPS: [[ADD:%[0-9]+]]:_(s32) = G_ADD [[CTPOP1]], [[CTPOP]]
    ; TC162OPS: $d2 = COPY [[ADD]](s32)
    ; NOTC162OPS-LABEL: name: test_ctpop_s32_bigger_s32
    ; NOTC162OPS: [[COPY:%[0-9]+]]:_(s32) = COPY $d4
    ; NOTC162OPS: [[ANYEXT:%[0-9]+]]:_(s64) = G_ANYEXT [[COPY]](s32)
    ; NOTC162OPS: [[UV:%[0-9]+]]:_(s32), [[UV1:%[0-9]+]]:_(s32) = G_UNMERGE_VALUES [[ANYEXT]](s64)
    ; NOTC162OPS: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; NOTC162OPS: [[LSHR:%[0-9]+]]:_(s32) = G_LSHR [[UV]], [[C]](s32)
    ; NOTC162OPS: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 1431655765
    ; NOTC162OPS: [[AND:%[0-9]+]]:_(s32) = G_AND [[LSHR]], [[C1]]
    ; NOTC162OPS: [[SUB:%[0-9]+]]:_(s32) = G_SUB [[UV]], [[AND]]
    ; NOTC162OPS: [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 2
    ; NOTC162OPS: [[LSHR1:%[0-9]+]]:_(s32) = G_LSHR [[SUB]], [[C2]](s32)
    ; NOTC162OPS: [[C3:%[0-9]+]]:_(s32) = G_CONSTANT i32 858993459
    ; NOTC162OPS: [[AND1:%[0-9]+]]:_(s32) = G_AND [[LSHR1]], [[C3]]
    ; NOTC162OPS: [[AND2:%[0-9]+]]:_(s32) = G_AND [[SUB]], [[C3]]
    ; NOTC162OPS: [[ADD:%[0-9]+]]:_(s32) = G_ADD [[AND1]], [[AND2]]
    ; NOTC162OPS: [[C4:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; NOTC162OPS: [[LSHR2:%[0-9]+]]:_(s32) = G_LSHR [[ADD]], [[C4]](s32)
    ; NOTC162OPS: [[ADD1:%[0-9]+]]:_(s32) = G_ADD [[LSHR2]], [[ADD]]
    ; NOTC162OPS: [[C5:%[0-9]+]]:_(s32) = G_CONSTANT i32 252645135
    ; NOTC162OPS: [[AND3:%[0-9]+]]:_(s32) = G_AND [[ADD1]], [[C5]]
    ; NOTC162OPS: [[C6:%[0-9]+]]:_(s32) = G_CONSTANT i32 16843009
    ; NOTC162OPS: [[MUL:%[0-9]+]]:_(s32) = G_MUL [[AND3]], [[C6]]
    ; NOTC162OPS: [[C7:%[0-9]+]]:_(s32) = G_CONSTANT i32 24
    ; NOTC162OPS: [[LSHR3:%[0-9]+]]:_(s32) = G_LSHR [[MUL]], [[C7]](s32)
    ; NOTC162OPS: [[C8:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; NOTC162OPS: [[LSHR4:%[0-9]+]]:_(s32) = G_LSHR [[UV1]], [[C8]](s32)
    ; NOTC162OPS: [[C9:%[0-9]+]]:_(s32) = G_CONSTANT i32 1431655765
    ; NOTC162OPS: [[AND4:%[0-9]+]]:_(s32) = G_AND [[LSHR4]], [[C9]]
    ; NOTC162OPS: [[SUB1:%[0-9]+]]:_(s32) = G_SUB [[UV1]], [[AND4]]
    ; NOTC162OPS: [[C10:%[0-9]+]]:_(s32) = G_CONSTANT i32 2
    ; NOTC162OPS: [[LSHR5:%[0-9]+]]:_(s32) = G_LSHR [[SUB1]], [[C10]](s32)
    ; NOTC162OPS: [[C11:%[0-9]+]]:_(s32) = G_CONSTANT i32 858993459
    ; NOTC162OPS: [[AND5:%[0-9]+]]:_(s32) = G_AND [[LSHR5]], [[C11]]
    ; NOTC162OPS: [[AND6:%[0-9]+]]:_(s32) = G_AND [[SUB1]], [[C11]]
    ; NOTC162OPS: [[ADD2:%[0-9]+]]:_(s32) = G_ADD [[AND5]], [[AND6]]
    ; NOTC162OPS: [[C12:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; NOTC162OPS: [[LSHR6:%[0-9]+]]:_(s32) = G_LSHR [[ADD2]], [[C12]](s32)
    ; NOTC162OPS: [[ADD3:%[0-9]+]]:_(s32) = G_ADD [[LSHR6]], [[ADD2]]
    ; NOTC162OPS: [[C13:%[0-9]+]]:_(s32) = G_CONSTANT i32 252645135
    ; NOTC162OPS: [[AND7:%[0-9]+]]:_(s32) = G_AND [[ADD3]], [[C13]]
    ; NOTC162OPS: [[C14:%[0-9]+]]:_(s32) = G_CONSTANT i32 16843009
    ; NOTC162OPS: [[MUL1:%[0-9]+]]:_(s32) = G_MUL [[AND7]], [[C14]]
    ; NOTC162OPS: [[C15:%[0-9]+]]:_(s32) = G_CONSTANT i32 24
    ; NOTC162OPS: [[LSHR7:%[0-9]+]]:_(s32) = G_LSHR [[MUL1]], [[C15]](s32)
    ; NOTC162OPS: [[ADD4:%[0-9]+]]:_(s32) = G_ADD [[LSHR7]], [[LSHR3]]
    ; NOTC162OPS: $d2 = COPY [[ADD4]](s32)
    %0:_(s32) = COPY $d4
    %1:_(s64) = G_ANYEXT %0:_(s32)
    %2:_(s32) = G_CTPOP %1
    $d2 = COPY %2(s32)
...

---
name:            test_ctpop_bigger_s32_smaller_s32
body:             |
  bb.0.entry:
    ; TC162OPS-LABEL: name: test_ctpop_bigger_s32_smaller_s32
    ; TC162OPS: [[COPY:%[0-9]+]]:_(s32) = COPY $d4
    ; TC162OPS: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; TC162OPS: [[COPY1:%[0-9]+]]:_(s32) = COPY [[COPY]](s32)
    ; TC162OPS: [[AND:%[0-9]+]]:_(s32) = G_AND [[COPY1]], [[C]]
    ; TC162OPS: [[CTPOP:%[0-9]+]]:_(s32) = G_CTPOP [[AND]](s32)
    ; TC162OPS: [[COPY2:%[0-9]+]]:_(s32) = COPY [[CTPOP]](s32)
    ; TC162OPS: [[ZEXT:%[0-9]+]]:_(s64) = G_ZEXT [[COPY2]](s32)
    ; TC162OPS: [[TRUNC:%[0-9]+]]:_(s32) = G_TRUNC [[ZEXT]](s64)
    ; TC162OPS: $d2 = COPY [[TRUNC]](s32)
    ; NOTC162OPS-LABEL: name: test_ctpop_bigger_s32_smaller_s32
    ; NOTC162OPS: [[COPY:%[0-9]+]]:_(s32) = COPY $d4
    ; NOTC162OPS: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; NOTC162OPS: [[COPY1:%[0-9]+]]:_(s32) = COPY [[COPY]](s32)
    ; NOTC162OPS: [[AND:%[0-9]+]]:_(s32) = G_AND [[COPY1]], [[C]]
    ; NOTC162OPS: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; NOTC162OPS: [[LSHR:%[0-9]+]]:_(s32) = G_LSHR [[AND]], [[C1]](s32)
    ; NOTC162OPS: [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 1431655765
    ; NOTC162OPS: [[AND1:%[0-9]+]]:_(s32) = G_AND [[LSHR]], [[C2]]
    ; NOTC162OPS: [[SUB:%[0-9]+]]:_(s32) = G_SUB [[AND]], [[AND1]]
    ; NOTC162OPS: [[C3:%[0-9]+]]:_(s32) = G_CONSTANT i32 2
    ; NOTC162OPS: [[LSHR1:%[0-9]+]]:_(s32) = G_LSHR [[SUB]], [[C3]](s32)
    ; NOTC162OPS: [[C4:%[0-9]+]]:_(s32) = G_CONSTANT i32 858993459
    ; NOTC162OPS: [[AND2:%[0-9]+]]:_(s32) = G_AND [[LSHR1]], [[C4]]
    ; NOTC162OPS: [[AND3:%[0-9]+]]:_(s32) = G_AND [[SUB]], [[C4]]
    ; NOTC162OPS: [[ADD:%[0-9]+]]:_(s32) = G_ADD [[AND2]], [[AND3]]
    ; NOTC162OPS: [[C5:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; NOTC162OPS: [[LSHR2:%[0-9]+]]:_(s32) = G_LSHR [[ADD]], [[C5]](s32)
    ; NOTC162OPS: [[ADD1:%[0-9]+]]:_(s32) = G_ADD [[LSHR2]], [[ADD]]
    ; NOTC162OPS: [[C6:%[0-9]+]]:_(s32) = G_CONSTANT i32 252645135
    ; NOTC162OPS: [[AND4:%[0-9]+]]:_(s32) = G_AND [[ADD1]], [[C6]]
    ; NOTC162OPS: [[C7:%[0-9]+]]:_(s32) = G_CONSTANT i32 16843009
    ; NOTC162OPS: [[MUL:%[0-9]+]]:_(s32) = G_MUL [[AND4]], [[C7]]
    ; NOTC162OPS: [[C8:%[0-9]+]]:_(s32) = G_CONSTANT i32 24
    ; NOTC162OPS: [[LSHR3:%[0-9]+]]:_(s32) = G_LSHR [[MUL]], [[C8]](s32)
    ; NOTC162OPS: [[COPY2:%[0-9]+]]:_(s32) = COPY [[LSHR3]](s32)
    ; NOTC162OPS: [[ZEXT:%[0-9]+]]:_(s64) = G_ZEXT [[COPY2]](s32)
    ; NOTC162OPS: [[TRUNC:%[0-9]+]]:_(s32) = G_TRUNC [[ZEXT]](s64)
    ; NOTC162OPS: $d2 = COPY [[TRUNC]](s32)
    %0:_(s32) = COPY $d4
    %1:_(s8) = G_TRUNC %0:_(s32)
    %2:_(s64) = G_CTPOP %1
    %3:_(s32) = G_TRUNC %2:_(s64)
    $d2 = COPY %3(s32)
...

---
name:            test_ctpop_bigger_s32_s32
body:             |
  bb.0.entry:
    ; TC162OPS-LABEL: name: test_ctpop_bigger_s32_s32
    ; TC162OPS: [[COPY:%[0-9]+]]:_(s32) = COPY $d4
    ; TC162OPS: [[CTPOP:%[0-9]+]]:_(s32) = G_CTPOP [[COPY]](s32)
    ; TC162OPS: [[ZEXT:%[0-9]+]]:_(s64) = G_ZEXT [[CTPOP]](s32)
    ; TC162OPS: [[TRUNC:%[0-9]+]]:_(s32) = G_TRUNC [[ZEXT]](s64)
    ; TC162OPS: $d2 = COPY [[TRUNC]](s32)
    ; NOTC162OPS-LABEL: name: test_ctpop_bigger_s32_s32
    ; NOTC162OPS: [[COPY:%[0-9]+]]:_(s32) = COPY $d4
    ; NOTC162OPS: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; NOTC162OPS: [[LSHR:%[0-9]+]]:_(s32) = G_LSHR [[COPY]], [[C]](s32)
    ; NOTC162OPS: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 1431655765
    ; NOTC162OPS: [[AND:%[0-9]+]]:_(s32) = G_AND [[LSHR]], [[C1]]
    ; NOTC162OPS: [[SUB:%[0-9]+]]:_(s32) = G_SUB [[COPY]], [[AND]]
    ; NOTC162OPS: [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 2
    ; NOTC162OPS: [[LSHR1:%[0-9]+]]:_(s32) = G_LSHR [[SUB]], [[C2]](s32)
    ; NOTC162OPS: [[C3:%[0-9]+]]:_(s32) = G_CONSTANT i32 858993459
    ; NOTC162OPS: [[AND1:%[0-9]+]]:_(s32) = G_AND [[LSHR1]], [[C3]]
    ; NOTC162OPS: [[AND2:%[0-9]+]]:_(s32) = G_AND [[SUB]], [[C3]]
    ; NOTC162OPS: [[ADD:%[0-9]+]]:_(s32) = G_ADD [[AND1]], [[AND2]]
    ; NOTC162OPS: [[C4:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; NOTC162OPS: [[LSHR2:%[0-9]+]]:_(s32) = G_LSHR [[ADD]], [[C4]](s32)
    ; NOTC162OPS: [[ADD1:%[0-9]+]]:_(s32) = G_ADD [[LSHR2]], [[ADD]]
    ; NOTC162OPS: [[C5:%[0-9]+]]:_(s32) = G_CONSTANT i32 252645135
    ; NOTC162OPS: [[AND3:%[0-9]+]]:_(s32) = G_AND [[ADD1]], [[C5]]
    ; NOTC162OPS: [[C6:%[0-9]+]]:_(s32) = G_CONSTANT i32 16843009
    ; NOTC162OPS: [[MUL:%[0-9]+]]:_(s32) = G_MUL [[AND3]], [[C6]]
    ; NOTC162OPS: [[C7:%[0-9]+]]:_(s32) = G_CONSTANT i32 24
    ; NOTC162OPS: [[LSHR3:%[0-9]+]]:_(s32) = G_LSHR [[MUL]], [[C7]](s32)
    ; NOTC162OPS: [[ZEXT:%[0-9]+]]:_(s64) = G_ZEXT [[LSHR3]](s32)
    ; NOTC162OPS: [[TRUNC:%[0-9]+]]:_(s32) = G_TRUNC [[ZEXT]](s64)
    ; NOTC162OPS: $d2 = COPY [[TRUNC]](s32)
    %0:_(s32) = COPY $d4
    %1:_(s64) = G_CTPOP %0
    %2:_(s32) = G_TRUNC %1:_(s64)
    $d2 = COPY %2(s32)
...

---
name:            test_ctpop_bigger_s32_bigger_s32
body:             |
  bb.0.entry:
    ; TC162OPS-LABEL: name: test_ctpop_bigger_s32_bigger_s32
    ; TC162OPS: [[COPY:%[0-9]+]]:_(s32) = COPY $d4
    ; TC162OPS: [[ANYEXT:%[0-9]+]]:_(s64) = G_ANYEXT [[COPY]](s32)
    ; TC162OPS: [[UV:%[0-9]+]]:_(s32), [[UV1:%[0-9]+]]:_(s32) = G_UNMERGE_VALUES [[ANYEXT]](s64)
    ; TC162OPS: [[CTPOP:%[0-9]+]]:_(s32) = G_CTPOP [[UV]](s32)
    ; TC162OPS: [[CTPOP1:%[0-9]+]]:_(s32) = G_CTPOP [[UV1]](s32)
    ; TC162OPS: [[ADD:%[0-9]+]]:_(s32) = G_ADD [[CTPOP1]], [[CTPOP]]
    ; TC162OPS: [[ZEXT:%[0-9]+]]:_(s64) = G_ZEXT [[ADD]](s32)
    ; TC162OPS: [[TRUNC:%[0-9]+]]:_(s32) = G_TRUNC [[ZEXT]](s64)
    ; TC162OPS: $d2 = COPY [[TRUNC]](s32)
    ; NOTC162OPS-LABEL: name: test_ctpop_bigger_s32_bigger_s32
    ; NOTC162OPS: [[COPY:%[0-9]+]]:_(s32) = COPY $d4
    ; NOTC162OPS: [[ANYEXT:%[0-9]+]]:_(s64) = G_ANYEXT [[COPY]](s32)
    ; NOTC162OPS: [[UV:%[0-9]+]]:_(s32), [[UV1:%[0-9]+]]:_(s32) = G_UNMERGE_VALUES [[ANYEXT]](s64)
    ; NOTC162OPS: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; NOTC162OPS: [[LSHR:%[0-9]+]]:_(s32) = G_LSHR [[UV]], [[C]](s32)
    ; NOTC162OPS: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 1431655765
    ; NOTC162OPS: [[AND:%[0-9]+]]:_(s32) = G_AND [[LSHR]], [[C1]]
    ; NOTC162OPS: [[SUB:%[0-9]+]]:_(s32) = G_SUB [[UV]], [[AND]]
    ; NOTC162OPS: [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 2
    ; NOTC162OPS: [[LSHR1:%[0-9]+]]:_(s32) = G_LSHR [[SUB]], [[C2]](s32)
    ; NOTC162OPS: [[C3:%[0-9]+]]:_(s32) = G_CONSTANT i32 858993459
    ; NOTC162OPS: [[AND1:%[0-9]+]]:_(s32) = G_AND [[LSHR1]], [[C3]]
    ; NOTC162OPS: [[AND2:%[0-9]+]]:_(s32) = G_AND [[SUB]], [[C3]]
    ; NOTC162OPS: [[ADD:%[0-9]+]]:_(s32) = G_ADD [[AND1]], [[AND2]]
    ; NOTC162OPS: [[C4:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; NOTC162OPS: [[LSHR2:%[0-9]+]]:_(s32) = G_LSHR [[ADD]], [[C4]](s32)
    ; NOTC162OPS: [[ADD1:%[0-9]+]]:_(s32) = G_ADD [[LSHR2]], [[ADD]]
    ; NOTC162OPS: [[C5:%[0-9]+]]:_(s32) = G_CONSTANT i32 252645135
    ; NOTC162OPS: [[AND3:%[0-9]+]]:_(s32) = G_AND [[ADD1]], [[C5]]
    ; NOTC162OPS: [[C6:%[0-9]+]]:_(s32) = G_CONSTANT i32 16843009
    ; NOTC162OPS: [[MUL:%[0-9]+]]:_(s32) = G_MUL [[AND3]], [[C6]]
    ; NOTC162OPS: [[C7:%[0-9]+]]:_(s32) = G_CONSTANT i32 24
    ; NOTC162OPS: [[LSHR3:%[0-9]+]]:_(s32) = G_LSHR [[MUL]], [[C7]](s32)
    ; NOTC162OPS: [[C8:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; NOTC162OPS: [[LSHR4:%[0-9]+]]:_(s32) = G_LSHR [[UV1]], [[C8]](s32)
    ; NOTC162OPS: [[C9:%[0-9]+]]:_(s32) = G_CONSTANT i32 1431655765
    ; NOTC162OPS: [[AND4:%[0-9]+]]:_(s32) = G_AND [[LSHR4]], [[C9]]
    ; NOTC162OPS: [[SUB1:%[0-9]+]]:_(s32) = G_SUB [[UV1]], [[AND4]]
    ; NOTC162OPS: [[C10:%[0-9]+]]:_(s32) = G_CONSTANT i32 2
    ; NOTC162OPS: [[LSHR5:%[0-9]+]]:_(s32) = G_LSHR [[SUB1]], [[C10]](s32)
    ; NOTC162OPS: [[C11:%[0-9]+]]:_(s32) = G_CONSTANT i32 858993459
    ; NOTC162OPS: [[AND5:%[0-9]+]]:_(s32) = G_AND [[LSHR5]], [[C11]]
    ; NOTC162OPS: [[AND6:%[0-9]+]]:_(s32) = G_AND [[SUB1]], [[C11]]
    ; NOTC162OPS: [[ADD2:%[0-9]+]]:_(s32) = G_ADD [[AND5]], [[AND6]]
    ; NOTC162OPS: [[C12:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; NOTC162OPS: [[LSHR6:%[0-9]+]]:_(s32) = G_LSHR [[ADD2]], [[C12]](s32)
    ; NOTC162OPS: [[ADD3:%[0-9]+]]:_(s32) = G_ADD [[LSHR6]], [[ADD2]]
    ; NOTC162OPS: [[C13:%[0-9]+]]:_(s32) = G_CONSTANT i32 252645135
    ; NOTC162OPS: [[AND7:%[0-9]+]]:_(s32) = G_AND [[ADD3]], [[C13]]
    ; NOTC162OPS: [[C14:%[0-9]+]]:_(s32) = G_CONSTANT i32 16843009
    ; NOTC162OPS: [[MUL1:%[0-9]+]]:_(s32) = G_MUL [[AND7]], [[C14]]
    ; NOTC162OPS: [[C15:%[0-9]+]]:_(s32) = G_CONSTANT i32 24
    ; NOTC162OPS: [[LSHR7:%[0-9]+]]:_(s32) = G_LSHR [[MUL1]], [[C15]](s32)
    ; NOTC162OPS: [[ADD4:%[0-9]+]]:_(s32) = G_ADD [[LSHR7]], [[LSHR3]]
    ; NOTC162OPS: [[ZEXT:%[0-9]+]]:_(s64) = G_ZEXT [[ADD4]](s32)
    ; NOTC162OPS: [[TRUNC:%[0-9]+]]:_(s32) = G_TRUNC [[ZEXT]](s64)
    ; NOTC162OPS: $d2 = COPY [[TRUNC]](s32)
    %0:_(s32) = COPY $d4
    %1:_(s64) = G_ANYEXT %0:_(s32)
    %2:_(s64) = G_CTPOP %1
    %3:_(s32) = G_TRUNC %2:_(s64)
    $d2 = COPY %3(s32)
...
