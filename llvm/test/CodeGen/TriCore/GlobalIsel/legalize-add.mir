# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -O0 -mtriple=tricore -global-isel -run-pass=legalizer -verify-machineinstrs %s -o - | FileCheck %s
---
name:            test_add_scalar
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: test_add_scalar
    ; CHECK: [[COPY:%[0-9]+]]:_(s32) = COPY $d4
    ; CHECK: [[COPY1:%[0-9]+]]:_(s32) = COPY $d5
    ; CHECK: [[ADD:%[0-9]+]]:_(s32) = G_ADD [[COPY]], [[COPY1]]
    ; CHECK: $d2 = COPY [[ADD]](s32)
    ; CHECK: RET implicit $a11, implicit $d2
    %0:_(s32) = COPY $d4
    %1:_(s32) = COPY $d5
    %2:_(s32) = G_ADD %0, %1
    $d2 = COPY %2(s32)
    RET implicit $a11, implicit $d2

...
---
name:            test_add_small_scalar
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: test_add_small_scalar
    ; CHECK: [[COPY:%[0-9]+]]:_(s32) = COPY $d4
    ; CHECK: [[COPY1:%[0-9]+]]:_(s32) = COPY $d5
    ; CHECK: [[COPY2:%[0-9]+]]:_(s32) = COPY [[COPY]](s32)
    ; CHECK: [[COPY3:%[0-9]+]]:_(s32) = COPY [[COPY1]](s32)
    ; CHECK: [[ADD:%[0-9]+]]:_(s32) = G_ADD [[COPY2]], [[COPY3]]
    ; CHECK: [[COPY4:%[0-9]+]]:_(s32) = COPY [[ADD]](s32)
    ; CHECK: $d2 = COPY [[COPY4]](s32)
    ; CHECK: RET implicit $a11, implicit $d2
    %0:_(s32) = COPY $d4
    %1:_(s32) = COPY $d5
    %2:_(s8) = G_TRUNC %0:_(s32)
    %3:_(s8) = G_TRUNC %1:_(s32)
    %4:_(s8) = G_ADD %2, %3
    %5:_(s32) = G_ANYEXT %4:_(s8)
    $d2 = COPY %5(s32)
    RET implicit $a11, implicit $d2

...
---
name:            test_add_small_nonpow2_scalar
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: test_add_small_nonpow2_scalar
    ; CHECK: [[COPY:%[0-9]+]]:_(s32) = COPY $d4
    ; CHECK: [[COPY1:%[0-9]+]]:_(s32) = COPY $d5
    ; CHECK: [[COPY2:%[0-9]+]]:_(s32) = COPY [[COPY]](s32)
    ; CHECK: [[COPY3:%[0-9]+]]:_(s32) = COPY [[COPY1]](s32)
    ; CHECK: [[ADD:%[0-9]+]]:_(s32) = G_ADD [[COPY2]], [[COPY3]]
    ; CHECK: [[COPY4:%[0-9]+]]:_(s32) = COPY [[ADD]](s32)
    ; CHECK: $d2 = COPY [[COPY4]](s32)
    ; CHECK: RET implicit $a11, implicit $d2
    %0:_(s32) = COPY $d4
    %1:_(s32) = COPY $d5
    %2:_(s3) = G_TRUNC %0:_(s32)
    %3:_(s3) = G_TRUNC %1:_(s32)
    %4:_(s3) = G_ADD %2, %3
    %5:_(s32) = G_ANYEXT %4:_(s3)
    $d2 = COPY %5(s32)
    RET implicit $a11, implicit $d2

...
---
name:            test_add_big_scalar
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: test_add_big_scalar
    ; CHECK: [[COPY:%[0-9]+]]:_(s64) = COPY $e4
    ; CHECK: [[COPY1:%[0-9]+]]:_(s64) = COPY $e6
    ; CHECK: [[UV:%[0-9]+]]:_(s32), [[UV1:%[0-9]+]]:_(s32) = G_UNMERGE_VALUES [[COPY]](s64)
    ; CHECK: [[UV2:%[0-9]+]]:_(s32), [[UV3:%[0-9]+]]:_(s32) = G_UNMERGE_VALUES [[COPY1]](s64)
    ; CHECK: [[UADDO:%[0-9]+]]:_(s32), [[UADDO1:%[0-9]+]]:_(s1) = G_UADDO [[UV]], [[UV2]]
    ; CHECK: [[UADDE:%[0-9]+]]:_(s32), [[UADDE1:%[0-9]+]]:_(s1) = G_UADDE [[UV1]], [[UV3]], [[UADDO1]]
    ; CHECK: [[MV:%[0-9]+]]:_(s64) = G_MERGE_VALUES [[UADDO]](s32), [[UADDE]](s32)
    ; CHECK: $e2 = COPY [[MV]](s64)
    ; CHECK: RET implicit $a11, implicit $e2
    %0:_(s64) = COPY $e4
    %1:_(s64) = COPY $e6
    %2:_(s64) = G_ADD %0, %1
    $e2 = COPY %2(s64)
    RET implicit $a11, implicit $e2

...
---
name:            test_add_big_nonpow2_scalar
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: test_add_big_nonpow2_scalar
    ; CHECK: [[COPY:%[0-9]+]]:_(s64) = COPY $e4
    ; CHECK: [[COPY1:%[0-9]+]]:_(s64) = COPY $e6
    ; CHECK: [[UV:%[0-9]+]]:_(s32), [[UV1:%[0-9]+]]:_(s32) = G_UNMERGE_VALUES [[COPY]](s64)
    ; CHECK: [[UV2:%[0-9]+]]:_(s32), [[UV3:%[0-9]+]]:_(s32) = G_UNMERGE_VALUES [[COPY]](s64)
    ; CHECK: [[UV4:%[0-9]+]]:_(s32), [[UV5:%[0-9]+]]:_(s32) = G_UNMERGE_VALUES [[COPY]](s64)
    ; CHECK: [[UV6:%[0-9]+]]:_(s32), [[UV7:%[0-9]+]]:_(s32) = G_UNMERGE_VALUES [[COPY1]](s64)
    ; CHECK: [[UV8:%[0-9]+]]:_(s32), [[UV9:%[0-9]+]]:_(s32) = G_UNMERGE_VALUES [[COPY1]](s64)
    ; CHECK: [[UV10:%[0-9]+]]:_(s32), [[UV11:%[0-9]+]]:_(s32) = G_UNMERGE_VALUES [[COPY1]](s64)
    ; CHECK: [[UADDO:%[0-9]+]]:_(s32), [[UADDO1:%[0-9]+]]:_(s1) = G_UADDO [[UV]], [[UV6]]
    ; CHECK: [[UADDE:%[0-9]+]]:_(s32), [[UADDE1:%[0-9]+]]:_(s1) = G_UADDE [[UV1]], [[UV7]], [[UADDO1]]
    ; CHECK: [[UADDE2:%[0-9]+]]:_(s32), [[UADDE3:%[0-9]+]]:_(s1) = G_UADDE [[UV2]], [[UV8]], [[UADDE1]]
    ; CHECK: [[UADDE4:%[0-9]+]]:_(s32), [[UADDE5:%[0-9]+]]:_(s1) = G_UADDE [[UV3]], [[UV9]], [[UADDE3]]
    ; CHECK: [[UADDE6:%[0-9]+]]:_(s32), [[UADDE7:%[0-9]+]]:_(s1) = G_UADDE [[UV4]], [[UV10]], [[UADDE5]]
    ; CHECK: [[UADDE8:%[0-9]+]]:_(s32), [[UADDE9:%[0-9]+]]:_(s1) = G_UADDE [[UV5]], [[UV11]], [[UADDE7]]
    ; CHECK: [[MV:%[0-9]+]]:_(s64) = G_MERGE_VALUES [[UADDO]](s32), [[UADDE]](s32)
    ; CHECK: [[MV1:%[0-9]+]]:_(s64) = G_MERGE_VALUES [[UADDE2]](s32), [[UADDE4]](s32)
    ; CHECK: [[MV2:%[0-9]+]]:_(s64) = G_MERGE_VALUES [[UADDE6]](s32), [[UADDE8]](s32)
    ; CHECK: $e2 = COPY [[MV]](s64)
    ; CHECK: $e4 = COPY [[MV1]](s64)
    ; CHECK: $e6 = COPY [[MV2]](s64)
    ; CHECK: RET implicit $a11, implicit $e2, implicit $e4, implicit $e6
    %0:_(s64) = COPY $e4
    %1:_(s64) = COPY $e6
    %2:_(s192) = G_MERGE_VALUES %0:_(s64), %0:_(s64), %0:_(s64)
    %3:_(s192) = G_MERGE_VALUES %1:_(s64), %1:_(s64), %1:_(s64)
    %4:_(s192) = G_ADD %2, %3
    %5:_(s64), %6:_(s64), %7:_(s64) = G_UNMERGE_VALUES %4:_(s192)
    $e2 = COPY %5(s64)
    $e4 = COPY %6(s64)
    $e6 = COPY %7(s64)
    RET implicit $a11, implicit $e2, implicit $e4, implicit $e6

...
